[{"D:\\progOther\\react\\test-work\\project-formatting\\src\\index.tsx":"1","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\FirstPage\\index.tsx":"2","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\DownloadBtn\\index.tsx":"3","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\ResizePage\\index.tsx":"4","D:\\progOther\\react\\test-work\\project-formatting\\src\\App.tsx":"5","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\index.tsx":"6","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\index.tsx":"7","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\event.ts":"8","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Gallery\\index.tsx":"9","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\DropzonePreview\\index.tsx":"10","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Thumb\\index.tsx":"11","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\store.ts":"12","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\CustomModal\\index.tsx":"13","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\SettingsImg\\index.tsx":"14","D:\\progOther\\react\\test-work\\project-formatting\\src\\utils\\differentFunc.ts":"15","D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\history.ts":"16","D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\router.tsx":"17","D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\Link.tsx":"18","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\imageService.ts":"19","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\fileService.ts":"20","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Buttons\\CloseButton\\index.tsx":"21","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\index.tsx":"22"},{"size":381,"mtime":1611651206253,"results":"23","hashOfConfig":"24"},{"size":1039,"mtime":1611651206258,"results":"25","hashOfConfig":"24"},{"size":934,"mtime":1611651206242,"results":"26","hashOfConfig":"24"},{"size":3334,"mtime":1611651206260,"results":"27","hashOfConfig":"24"},{"size":290,"mtime":1611651206235,"results":"28","hashOfConfig":"24"},{"size":1108,"mtime":1611651206246,"results":"29","hashOfConfig":"24"},{"size":2410,"mtime":1612361718452,"results":"30","hashOfConfig":"24"},{"size":999,"mtime":1611835543892,"results":"31","hashOfConfig":"24"},{"size":2392,"mtime":1611651206248,"results":"32","hashOfConfig":"24"},{"size":1061,"mtime":1611651206245,"results":"33","hashOfConfig":"24"},{"size":419,"mtime":1611651206251,"results":"34","hashOfConfig":"24"},{"size":2985,"mtime":1611835543893,"results":"35","hashOfConfig":"24"},{"size":761,"mtime":1611651206241,"results":"36","hashOfConfig":"24"},{"size":2734,"mtime":1611651206249,"results":"37","hashOfConfig":"24"},{"size":2542,"mtime":1612165205617,"results":"38","hashOfConfig":"24"},{"size":862,"mtime":1610519493281,"results":"39","hashOfConfig":"24"},{"size":1473,"mtime":1611651206263,"results":"40","hashOfConfig":"24"},{"size":683,"mtime":1611651206261,"results":"41","hashOfConfig":"24"},{"size":2480,"mtime":1612361675522,"results":"42","hashOfConfig":"24"},{"size":1024,"mtime":1611651206264,"results":"43","hashOfConfig":"24"},{"size":714,"mtime":1611651206237,"results":"44","hashOfConfig":"24"},{"size":4581,"mtime":1612278164618,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"1utu9zq",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"49"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"49"},"D:\\progOther\\react\\test-work\\project-formatting\\src\\index.tsx",["102","103"],"import ReactDOM from 'react-dom';\r\nimport history from './router/history';\r\nimport router from './router/router';\r\n\r\nimport './index.css';\r\n\r\nconst render = async (location: any) => {\r\n  const element: any = await router.resolve(location);\r\n  ReactDOM.render(\r\n      element,\r\n      document.getElementById('root'),\r\n  );\r\n};\r\n\r\nrender(history.location);\r\nhistory.listen(render);\r\n",["104","105","106","107","108","109"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\FirstPage\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\DownloadBtn\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\ResizePage\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\App.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\index.tsx",["110"],"import React from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { useStore } from 'effector-react';\r\nimport CropForm from './CropForm';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport { getCroppedImg } from '../../services/imageService';\r\nimport { $numberImg, $typeCrop } from '../../effector/store';\r\nimport { nextNumberImg } from '../../effector/event';\r\nimport { ICrop } from '../../interfaces/components';\r\nimport { IobjImg, IMyCustomCrop } from '../../interfaces/items';\r\nimport styles from './Crop.module.css';\r\n\r\nconst typeCropWords = ['px', '%', 'aspect'];\r\n\r\nconst Crop: React.FC<ICrop> = ({ addCropedImg, src, onCloseModal }) => {  \r\n  const [imageRef, setImageRef] = React.useState<any>(null);\r\n  const numberImg = useStore($numberImg);\r\n  const typeCrop = useStore($typeCrop);\r\n  const [crop, setCrop] = React.useState<IMyCustomCrop>({\r\n    unit: '%',\r\n    width: 50,\r\n    height: 50,\r\n  });\r\n\r\n  const onCropChange = (newCrop: IMyCustomCrop, cropPercent: IMyCustomCrop): void => {\r\n    setCrop((prevCrop: IMyCustomCrop) => {\r\n      let newCropState;\r\n      if (typeCrop === typeCropWords[1] && cropPercent ) {\r\n        newCropState = {\r\n          ...prevCrop,\r\n          ...cropPercent,\r\n        };\r\n      } else {\r\n        newCropState = { \r\n          ...prevCrop,\r\n        ...newCrop\r\n        };\r\n      }\r\n      \r\n      return {\r\n        ...newCropState\r\n      };\r\n    });\r\n  };\r\n\r\n  const makeClientCrop = async (crop: IMyCustomCrop) => {\r\n    if (imageRef && crop.width && crop.height) {\r\n      const blobObj: IobjImg = await getCroppedImg(imageRef, crop, `${numberImg}.jpeg`);\r\n      blobObj.imgWidth = crop.width;\r\n      blobObj.imgHeight = crop.height;\r\n      \r\n      addCropedImg(blobObj);\r\n    }\r\n  };\r\n\r\n  const onImageLoaded = (image: HTMLImageElement): void => {\r\n    setImageRef(image);\r\n  };\r\n\r\n  const onCropComplete = (): void => {\r\n    makeClientCrop(crop);\r\n    nextNumberImg();\r\n    onCloseModal();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ReactCrop\r\n        crop={ crop }\r\n        onChange={ onCropChange }\r\n        onImageLoaded={ onImageLoaded }\r\n        src={ src }\r\n      />\r\n      <CropForm\r\n        crop={ crop }\r\n        imageRef={ imageRef }\r\n        onCropComplete={ onCropComplete }\r\n        setCrop={ onCropChange }\r\n        typeCrop={ typeCrop }\r\n        typeCropWords={ typeCropWords }\r\n      />\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Crop;\r\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\event.ts",["111","112","113","114","115"],"import { createEvent } from 'effector';\r\nimport { IobjImg } from '../interfaces/items';\r\n\r\nexport const setImages = createEvent<IobjImg[]>();\r\nexport const setCurrentCropImage = createEvent<IobjImg[]>();\r\nexport const setLengthKitsImages = createEvent<number>();\r\nexport const setKitImages = createEvent<any>();\r\nexport const nextKitImages = createEvent();\r\nexport const previousKitImages = createEvent();\r\nexport const setCurrentIdx = createEvent<number>();\r\nexport const activeModal = createEvent();\r\nexport const disableModal = createEvent();\r\nexport const nextNumberImg = createEvent();\r\nexport const setColor = createEvent<any>();\r\nexport const setQuality = createEvent<any>();\r\nexport const setIsCroppedImages = createEvent<boolean>();\r\nexport const cancelImg = createEvent<number>();\r\nexport const cancelCropImg = createEvent<number>();\r\nexport const setCancelCropImg = createEvent<any>();\r\nexport const setKitsImages = createEvent<any>();\r\nexport const setTypeCrop = createEvent<string>();\r\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Gallery\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\DropzonePreview\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Thumb\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\store.ts",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\CustomModal\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\SettingsImg\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\utils\\differentFunc.ts",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"import { IobjIdxKitImages, IobjImg } from '../interfaces/items';\r\n\r\nexport const findNewCurrentIdx = (state: IobjIdxKitImages, operation: string): IobjIdxKitImages => {\r\n  const newIdx = operation === '-' ? state.idx - 1 : state.idx + 1;\r\n\r\n  const hasIdx = (newIdx <= state.maxIdx) && newIdx > -1;\r\n  if (!hasIdx) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    idx: newIdx,\r\n  };\r\n};\r\n\r\nexport const convertFromBase64 = (el: any, idx: number) => {\r\n  return fetch(el)\r\n    .then((res) => res.blob())\r\n    .then((blob) => {\r\n      const file = new File([blob], idx.toString(), { type: 'image/png' });\r\n      const newFile = Object.assign(file, {\r\n        preview: URL.createObjectURL(file),\r\n      });\r\n\r\n      return newFile;\r\n    });\r\n};\r\n\r\nexport const getLocalItems = (localName: string, setItems: (items: IobjImg[]) => void): void => {\r\n  const items: any[] = JSON.parse(<string>localStorage.getItem(localName));\r\n  if (!items) return;\r\n  const promiseArr = items.map((el: any, idx: number) => {\r\n    return convertFromBase64(el, idx);\r\n\r\n  });\r\n\r\n  const arrItems: any[] = [];\r\n  Promise.allSettled(promiseArr).then((results: any) => {\r\n    results.forEach((result: any) => {\r\n      arrItems.push(result.value);\r\n    });\r\n    \r\n    setItems(arrItems);\r\n  });\r\n};\r\n\r\nexport const toBase64 = (file: any) => new Promise((resolve, reject) => {  \r\n  const reader = new FileReader();\r\n  reader.readAsDataURL(file);\r\n  reader.onload = () => resolve(reader.result);\r\n  reader.onerror = (error) => reject(error);\r\n});\r\n\r\nconst executeFuncIfNotArray = (item: any, func: (el: any) => any): any => {\r\n  if (Array.isArray(item)) {\r\n    return item.map((el: any) => {\r\n      return executeFuncIfNotArray(el, func);\r\n    });\r\n  } else {\r\n    return func(item);\r\n  }\r\n};\r\n\r\nexport const saveDataInLocalStorage = (localName: string, data: any) => {\r\n  const newData: any = [];\r\n\r\n  const convertedDataToBase64 = executeFuncIfNotArray(data, toBase64);\r\n  Promise.allSettled(convertedDataToBase64).then((results: any) => {\r\n   \r\n\r\n    const promisedRes =  results.map((result: any) => {\r\n        // results[0].value[0].then((data: any) => console.log(data));\r\n        return result.value;\r\n    });\r\n\r\n    const convertedBase64ToString = JSON.stringify(promisedRes);\r\n    localStorage.setItem(localName, convertedBase64ToString);\r\n  });\r\n\r\n};\r\n\r\nexport const calcAspect = ( width: number, height: number): number | boolean => {\r\n  if (height <= 0 || width <= 0) {\r\n    return false;\r\n  }\r\n  const aspect = width / height;\r\n  return aspect;\r\n};","D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\history.ts",["138","139","140","141","142"],"import { createBrowserHistory } from 'history';\r\nimport parse from 'url-parse';\r\nimport deepEqual from 'deep-equal';\r\n\r\nconst isNode = new Function('try {return this===global;}catch(e){return false;}') //eslint-disable-line\r\nlet history: any;\r\n\r\nif (!isNode()) {\r\n  history = createBrowserHistory();\r\n  history.navigate = function (path: any, state: any) {\r\n    const parsedPath = parse(path);\r\n    const location = history.location;\r\n    if (parsedPath.pathname === location.pathname &&\r\n      parsedPath.query === location.search &&\r\n      parsedPath.hash === location.hash &&\r\n      deepEqual(state, location.state)) {\r\n      return;\r\n    }\r\n    const args = Array.from(arguments);\r\n    args.splice(0, 2);\r\n    return history.push(...[path, state, ...args]);\r\n  };\r\n} else {\r\n  history = {};\r\n  history.navigate = function () {};\r\n}\r\n\r\nexport default history;",["143","144","145","146","147","148"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\router.tsx",["149","150"],"import React from 'react';\r\nimport UniversalRouter from 'universal-router';\r\nimport App from '../App';\r\nimport FirstPage from '../pages/FirstPage';\r\nimport ResizePage from '../pages/ResizePage';\r\n\r\nconst routes =\r\n    {\r\n        path: '/',\r\n        async action({ next }: any) {\r\n            const children = await next();\r\n            return (\r\n              <App>\r\n                { children }\r\n              </App>\r\n            );\r\n        },\r\n        children: [\r\n            {\r\n                path: '',\r\n                async action() {\r\n                    return (\r\n                      <FirstPage />\r\n                    );\r\n                },\r\n            },\r\n            {\r\n                path: '/resize',\r\n                async action({ next }: any) {\r\n                    const children = await next();\r\n                    return (\r\n                      <App>\r\n                        { children }\r\n                      </App>\r\n                    );\r\n                },\r\n                children: [\r\n                    {\r\n                        path: '',\r\n                        async action() {\r\n                            return (\r\n                              <ResizePage />\r\n                            );\r\n                        },\r\n                    },\r\n                ]\r\n            },\r\n        ],\r\n    };\r\n\r\nexport const basename = '';\r\n\r\nconst router = new UniversalRouter(routes, {\r\n    baseUrl: basename\r\n});\r\n\r\nexport default router;",["151","152","153","154","155","156"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\Link.tsx",["157"],"// eslint-disable-next-line import/no-cycle\r\nimport React from 'react';\r\nimport { basename } from './router';\r\nimport history from './history';\r\nimport { IMyLink } from '../interfaces/items';\r\n\r\nfunction noOp(){}\r\n\r\nconst createOnClickAnchor = (callback: any) => {\r\n    return (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n        e.preventDefault();\r\n        history.navigate(e.currentTarget.getAttribute('href'));\r\n        callback(e);\r\n    };\r\n};\r\n\r\nexport default ({ href, onClick = noOp, children, ...rest }: IMyLink ): React.ReactElement => (\r\n  <a\r\n    href={ basename + href }\r\n    onClick={ createOnClickAnchor(onClick) }\r\n    { ...rest }\r\n  >\r\n    { children }\r\n  </a>\r\n);","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\imageService.ts",["158","159","160","161","162","163"],"import { IobjImg, IMyCustomCrop } from '../interfaces/items';\r\n\r\nexport const getWidthAndHeightFromFile = (file: IobjImg): {imgWidth: number, imgHeight: number } => {\r\n  const img: HTMLImageElement = new Image();\r\n  img.src = file.preview!;\r\n  const imgWidth = img.width;\r\n  const imgHeight = img.height;\r\n  return { imgWidth, imgHeight };\r\n};\r\n\r\nexport const calcProportion = (firstArg: number, necessarySize: number, secondArg: number): number => {\r\n  const propotion: number = Math.round(firstArg * (necessarySize / secondArg));\r\n  return propotion;\r\n};\r\n\r\nexport const getTypeByPropotion = (proportionWidth: number, proportionHeight: number, types: string[]): string => {\r\n  if ((proportionWidth / proportionHeight) > 1) {\r\n    return types[0];\r\n  } else {\r\n    return types[1];\r\n  }\r\n};\r\n\r\nexport const calcPxCropFromPercent = (image: HTMLImageElement, crop: IMyCustomCrop) => {\r\n  const pixelCrop = {\r\n    x: Math.round(image.naturalWidth * (crop.x! / 100)),\r\n    y: Math.round(image.naturalHeight * (crop.y! / 100)),\r\n    width: Math.round(image.naturalWidth * (crop.width! / 100)),\r\n    height: Math.round(image.naturalHeight * (crop.height! / 100)),\r\n  };\r\n  \r\n  return pixelCrop;\r\n};\r\n\r\nexport const getCroppedImg = (image: HTMLImageElement, crop: IMyCustomCrop, fileName: string): Promise<IobjImg> => {\r\n  console.log('image', image);\r\n  console.log('naturalWidth', image.naturalWidth);\r\n  console.log('naturalHeight', image.naturalHeight);\r\n  console.log('width', image.width);\r\n  console.log('height', image.height);\r\n  \r\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n  if (crop.unit === '%') {\r\n    crop = calcPxCropFromPercent(image, crop);  \r\n  }\r\n  const scaleX: number = image.naturalWidth / image.width;\r\n  const scaleY: number = image.naturalHeight / image.height;\r\n  canvas.width = Math.ceil(crop.width! * scaleX);\r\n  canvas.height = Math.ceil(crop.height! * scaleY);\r\n  const ctx: CanvasRenderingContext2D | null = canvas.getContext('2d');\r\n\r\n  ctx!.drawImage(\r\n    image,\r\n    crop.x! * scaleX,\r\n    crop.y! * scaleY,\r\n    crop.width! * scaleX,\r\n    crop.height! * scaleY,\r\n    0,\r\n    0,\r\n    crop.width! * scaleX,\r\n    crop.height! * scaleY,\r\n  );\r\n\r\n  return new Promise((resolve) => {\r\n    canvas.toBlob((blob: IobjImg | null) => {\r\n      if (!blob) {\r\n        return;\r\n      }\r\n\r\n      blob.name = fileName;\r\n      \r\n      blob.preview = window.URL.createObjectURL(blob);\r\n      resolve(blob);\r\n    }, 'image/jpeg');\r\n  });\r\n};","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\fileService.ts",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Buttons\\CloseButton\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\index.tsx",["164","165"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport styles from '../Crop.module.css';\r\nimport { IMyCustomCrop } from '../../../interfaces/items';\r\nimport { setTypeCrop } from '../../../effector/event';\r\nimport { calcAspect } from '../../../utils/differentFunc';\r\n\r\n\r\nconst CropForm: React.FC<any> = ({ onCropComplete, setCrop, crop, imageRef, typeCrop, typeCropWords }) => {\r\n\r\n  const onChangeTypeCrop = (event: React.ChangeEvent<any>) => {\r\n    const newTypeCrop = event.target.value;\r\n    \r\n    if (newTypeCrop === typeCropWords[2]) {\r\n      setCrop({\r\n          aspect: 16 / 9,\r\n          aspectHeight: 9,\r\n          aspectWidth: 16,\r\n          width: 50,\r\n        });\r\n\r\n    } else {\r\n      setCrop({\r\n        unit: newTypeCrop as 'px' | '%',\r\n        width: 50,\r\n        height: 50,\r\n      });\r\n\r\n    }\r\n    setTypeCrop(newTypeCrop);\r\n\r\n  };\r\n\r\n  \r\n  const emptyField = (fieldName: string) => {\r\n    setCrop(((prevCrop: IMyCustomCrop) => {\r\n      return {\r\n        ...prevCrop,\r\n      [fieldName]: '',\r\n      };\r\n    }));\r\n};\r\n\r\n  const setCropHeight = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const { value } = event.target;\r\n    if (value.length === 0) {\r\n      emptyField('height');\r\n      return;\r\n    }\r\n\r\n    const height = parseInt(value);\r\n    if (height) {\r\n      // const y = (imageRef!.height - height) / 2;\r\n      const unit = typeCrop;\r\n\r\n      setCrop({\r\n          height,\r\n          y: 0,\r\n          unit\r\n        });\r\n    }\r\n  };\r\n\r\n  const setCropWidth = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const { value } = event.target;\r\n    if (value.length === 0) {\r\n      emptyField('width');\r\n      return;\r\n    }\r\n    \r\n    const width = parseInt(value);\r\n    if (width) {\r\n      // const x = (imageRef!.width - width) / 2;\r\n      const unit = typeCrop;\r\n\r\n      setCrop({\r\n        width,\r\n        x: 0,\r\n        unit\r\n      });\r\n    }\r\n  };\r\n\r\n  const setCropAspectHeight = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const { value } = event.target;\r\n    if (value.length === 0) {\r\n      emptyField('aspectHeight');\r\n      return;\r\n    }\r\n\r\n    const aspectHeight = parseInt(value);\r\n    const aspect = calcAspect(crop.aspectWidth!, aspectHeight);\r\n    if (aspect) {\r\n      setCrop({\r\n        aspectHeight,\r\n        aspect\r\n      });\r\n    }\r\n  };\r\n\r\n  const setCropAspectWidth = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    const { value } = event.target;\r\n    if (value.length === 0) {\r\n      emptyField('aspectWidth');\r\n      return;\r\n    }\r\n    const aspectWidth = parseInt(value);\r\n    const aspect = calcAspect(aspectWidth, crop.aspectHeight!);\r\n\r\n    if (aspectWidth) {\r\n      setCrop({\r\n      aspectWidth,\r\n      aspect\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCropComplete = (): void => {\r\n    onCropComplete();\r\n    setTypeCrop(typeCropWords[0]);\r\n  }; \r\n  \r\n  return (\r\n    <form\r\n      autoComplete='off'\r\n      className={ styles.cropForm }\r\n      noValidate\r\n    >\r\n      { typeCrop !== typeCropWords[2] && ( \r\n      <>\r\n        <TextField\r\n          label='Width'\r\n          onChange={ setCropWidth }\r\n          type='number'\r\n          value={ crop.width }\r\n        />\r\n        <TextField\r\n          label='Height'\r\n          onChange={ setCropHeight }\r\n          type='number'\r\n          value={ crop.height }\r\n        />\r\n        \r\n      </>\r\n       ) }\r\n      { typeCrop === typeCropWords[2] && (\r\n        <>\r\n          <TextField\r\n            label='Width'\r\n            onChange={ setCropAspectWidth }\r\n            type='number'\r\n            value={ crop.aspectWidth }\r\n          />\r\n          <TextField\r\n            label='Height'\r\n            onChange={ setCropAspectHeight }\r\n            type='number'\r\n            value={ crop.aspectHeight }\r\n          />\r\n          \r\n        </>\r\n      ) }\r\n      <Select\r\n        onChange={ onChangeTypeCrop }\r\n        value={ typeCrop }\r\n      >\r\n        {\r\n          typeCropWords.map((word: string, idx: number) => {\r\n\r\n            return (\r\n              <MenuItem\r\n                key={ `${word}_${idx}` }\r\n                value={ word }\r\n              >\r\n                { word }\r\n              </MenuItem>\r\n);\r\n          })\r\n          }\r\n      </Select>\r\n      <Button\r\n        color='primary'\r\n        onClick={ handleCropComplete }\r\n      >\r\n        Save\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CropForm;",{"ruleId":"166","severity":1,"message":"167","line":7,"column":33,"nodeType":"168","messageId":"169","endLine":7,"endColumn":36,"suggestions":"170"},{"ruleId":"166","severity":1,"message":"167","line":8,"column":18,"nodeType":"168","messageId":"169","endLine":8,"endColumn":21,"suggestions":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"166","severity":1,"message":"167","line":16,"column":50,"nodeType":"168","messageId":"169","endLine":16,"endColumn":53,"suggestions":"184"},{"ruleId":"166","severity":1,"message":"167","line":7,"column":41,"nodeType":"168","messageId":"169","endLine":7,"endColumn":44,"suggestions":"185"},{"ruleId":"166","severity":1,"message":"167","line":14,"column":37,"nodeType":"168","messageId":"169","endLine":14,"endColumn":40,"suggestions":"186"},{"ruleId":"166","severity":1,"message":"167","line":15,"column":39,"nodeType":"168","messageId":"169","endLine":15,"endColumn":42,"suggestions":"187"},{"ruleId":"166","severity":1,"message":"167","line":19,"column":45,"nodeType":"168","messageId":"169","endLine":19,"endColumn":48,"suggestions":"188"},{"ruleId":"166","severity":1,"message":"167","line":20,"column":42,"nodeType":"168","messageId":"169","endLine":20,"endColumn":45,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":17,"column":34,"nodeType":"192","messageId":"193","endLine":17,"endColumn":59},{"ruleId":"190","severity":1,"message":"194","line":17,"column":35,"nodeType":"195","messageId":"196","endLine":17,"endColumn":42},{"ruleId":"166","severity":1,"message":"167","line":17,"column":39,"nodeType":"168","messageId":"169","endLine":17,"endColumn":42,"suggestions":"197"},{"ruleId":"166","severity":1,"message":"167","line":31,"column":16,"nodeType":"168","messageId":"169","endLine":31,"endColumn":19,"suggestions":"198"},{"ruleId":"166","severity":1,"message":"167","line":33,"column":37,"nodeType":"168","messageId":"169","endLine":33,"endColumn":40,"suggestions":"199"},{"ruleId":"166","severity":1,"message":"167","line":38,"column":19,"nodeType":"168","messageId":"169","endLine":38,"endColumn":22,"suggestions":"200"},{"ruleId":"166","severity":1,"message":"167","line":39,"column":49,"nodeType":"168","messageId":"169","endLine":39,"endColumn":52,"suggestions":"201"},{"ruleId":"166","severity":1,"message":"167","line":40,"column":30,"nodeType":"168","messageId":"169","endLine":40,"endColumn":33,"suggestions":"202"},{"ruleId":"190","severity":1,"message":"191","line":48,"column":25,"nodeType":"192","messageId":"193","endLine":48,"endColumn":39},{"ruleId":"190","severity":1,"message":"203","line":48,"column":26,"nodeType":"195","messageId":"196","endLine":48,"endColumn":35},{"ruleId":"166","severity":1,"message":"167","line":48,"column":32,"nodeType":"168","messageId":"169","endLine":48,"endColumn":35,"suggestions":"204"},{"ruleId":"166","severity":1,"message":"167","line":55,"column":38,"nodeType":"168","messageId":"169","endLine":55,"endColumn":41,"suggestions":"205"},{"ruleId":"166","severity":1,"message":"167","line":55,"column":54,"nodeType":"168","messageId":"169","endLine":55,"endColumn":57,"suggestions":"206"},{"ruleId":"166","severity":1,"message":"167","line":55,"column":62,"nodeType":"168","messageId":"169","endLine":55,"endColumn":65,"suggestions":"207"},{"ruleId":"166","severity":1,"message":"167","line":55,"column":68,"nodeType":"168","messageId":"169","endLine":55,"endColumn":71,"suggestions":"208"},{"ruleId":"166","severity":1,"message":"167","line":57,"column":26,"nodeType":"168","messageId":"169","endLine":57,"endColumn":29,"suggestions":"209"},{"ruleId":"190","severity":1,"message":"191","line":65,"column":39,"nodeType":"192","messageId":"193","endLine":65,"endColumn":72},{"ruleId":"190","severity":1,"message":"210","line":65,"column":59,"nodeType":"195","messageId":"196","endLine":65,"endColumn":68},{"ruleId":"166","severity":1,"message":"167","line":65,"column":65,"nodeType":"168","messageId":"169","endLine":65,"endColumn":68,"suggestions":"211"},{"ruleId":"166","severity":1,"message":"167","line":66,"column":18,"nodeType":"168","messageId":"169","endLine":66,"endColumn":21,"suggestions":"212"},{"ruleId":"166","severity":1,"message":"167","line":69,"column":60,"nodeType":"168","messageId":"169","endLine":69,"endColumn":63,"suggestions":"213"},{"ruleId":"166","severity":1,"message":"167","line":72,"column":47,"nodeType":"168","messageId":"169","endLine":72,"endColumn":50,"suggestions":"214"},{"ruleId":"166","severity":1,"message":"167","line":6,"column":14,"nodeType":"168","messageId":"169","endLine":6,"endColumn":17,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":10,"column":22,"nodeType":"218","messageId":"219","endLine":10,"endColumn":31},{"ruleId":"166","severity":1,"message":"167","line":10,"column":38,"nodeType":"168","messageId":"169","endLine":10,"endColumn":41,"suggestions":"220"},{"ruleId":"166","severity":1,"message":"167","line":10,"column":50,"nodeType":"168","messageId":"169","endLine":10,"endColumn":53,"suggestions":"221"},{"ruleId":"216","severity":1,"message":"217","line":25,"column":22,"nodeType":"218","messageId":"219","endLine":25,"endColumn":31},{"ruleId":"172","replacedBy":"222"},{"ruleId":"174","replacedBy":"223"},{"ruleId":"176","replacedBy":"224"},{"ruleId":"178","replacedBy":"225"},{"ruleId":"180","replacedBy":"226"},{"ruleId":"182","replacedBy":"227"},{"ruleId":"166","severity":1,"message":"167","line":10,"column":32,"nodeType":"168","messageId":"169","endLine":10,"endColumn":35,"suggestions":"228"},{"ruleId":"166","severity":1,"message":"167","line":29,"column":40,"nodeType":"168","messageId":"169","endLine":29,"endColumn":43,"suggestions":"229"},{"ruleId":"172","replacedBy":"230"},{"ruleId":"174","replacedBy":"231"},{"ruleId":"176","replacedBy":"232"},{"ruleId":"178","replacedBy":"233"},{"ruleId":"180","replacedBy":"234"},{"ruleId":"182","replacedBy":"235"},{"ruleId":"166","severity":1,"message":"167","line":9,"column":40,"nodeType":"168","messageId":"169","endLine":9,"endColumn":43,"suggestions":"236"},{"ruleId":"190","severity":1,"message":"191","line":24,"column":38,"nodeType":"192","messageId":"193","endLine":24,"endColumn":87},{"ruleId":"237","severity":1,"message":"238","line":36,"column":3,"nodeType":"239","messageId":"240","endLine":36,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":37,"column":3,"nodeType":"239","messageId":"240","endLine":37,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":38,"column":3,"nodeType":"239","messageId":"240","endLine":38,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":39,"column":3,"nodeType":"239","messageId":"240","endLine":39,"endColumn":14},{"ruleId":"237","severity":1,"message":"238","line":40,"column":3,"nodeType":"239","messageId":"240","endLine":40,"endColumn":14},{"ruleId":"166","severity":1,"message":"167","line":12,"column":26,"nodeType":"168","messageId":"169","endLine":12,"endColumn":29,"suggestions":"241"},{"ruleId":"166","severity":1,"message":"167","line":14,"column":54,"nodeType":"168","messageId":"169","endLine":14,"endColumn":57,"suggestions":"242"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["243","244"],["245","246"],"react/jsx-space-before-closing",[],"lines-around-directive",["247"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["248","249"],["250","251"],["252","253"],["254","255"],["256","257"],["258","259"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'el' should be typed with a non-any type.","Identifier","anyTypedArg",["260","261"],["262","263"],["264","265"],["266","267"],["268","269"],["270","271"],"Argument 'file' should be typed with a non-any type.",["272","273"],["274","275"],["276","277"],["278","279"],["280","281"],["282","283"],"Argument 'data' should be typed with a non-any type.",["284","285"],["286","287"],["288","289"],["290","291"],["292","293"],"func-names","Unexpected unnamed function.","FunctionExpression","unnamed",["294","295"],["296","297"],[],["247"],[],[],[],[],["298","299"],["300","301"],[],["247"],[],[],[],[],["302","303"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["304","305"],["306","307"],{"messageId":"308","fix":"309","desc":"310"},{"messageId":"311","fix":"312","desc":"313"},{"messageId":"308","fix":"314","desc":"310"},{"messageId":"311","fix":"315","desc":"313"},"padding-line-between-statements",{"messageId":"308","fix":"316","desc":"310"},{"messageId":"311","fix":"317","desc":"313"},{"messageId":"308","fix":"318","desc":"310"},{"messageId":"311","fix":"319","desc":"313"},{"messageId":"308","fix":"320","desc":"310"},{"messageId":"311","fix":"321","desc":"313"},{"messageId":"308","fix":"322","desc":"310"},{"messageId":"311","fix":"323","desc":"313"},{"messageId":"308","fix":"324","desc":"310"},{"messageId":"311","fix":"325","desc":"313"},{"messageId":"308","fix":"326","desc":"310"},{"messageId":"311","fix":"327","desc":"313"},{"messageId":"308","fix":"328","desc":"310"},{"messageId":"311","fix":"329","desc":"313"},{"messageId":"308","fix":"330","desc":"310"},{"messageId":"311","fix":"331","desc":"313"},{"messageId":"308","fix":"332","desc":"310"},{"messageId":"311","fix":"333","desc":"313"},{"messageId":"308","fix":"334","desc":"310"},{"messageId":"311","fix":"335","desc":"313"},{"messageId":"308","fix":"336","desc":"310"},{"messageId":"311","fix":"337","desc":"313"},{"messageId":"308","fix":"338","desc":"310"},{"messageId":"311","fix":"339","desc":"313"},{"messageId":"308","fix":"340","desc":"310"},{"messageId":"311","fix":"341","desc":"313"},{"messageId":"308","fix":"342","desc":"310"},{"messageId":"311","fix":"343","desc":"313"},{"messageId":"308","fix":"344","desc":"310"},{"messageId":"311","fix":"345","desc":"313"},{"messageId":"308","fix":"346","desc":"310"},{"messageId":"311","fix":"347","desc":"313"},{"messageId":"308","fix":"348","desc":"310"},{"messageId":"311","fix":"349","desc":"313"},{"messageId":"308","fix":"350","desc":"310"},{"messageId":"311","fix":"351","desc":"313"},{"messageId":"308","fix":"352","desc":"310"},{"messageId":"311","fix":"353","desc":"313"},{"messageId":"308","fix":"354","desc":"310"},{"messageId":"311","fix":"355","desc":"313"},{"messageId":"308","fix":"356","desc":"310"},{"messageId":"311","fix":"357","desc":"313"},{"messageId":"308","fix":"358","desc":"310"},{"messageId":"311","fix":"359","desc":"313"},{"messageId":"308","fix":"360","desc":"310"},{"messageId":"311","fix":"361","desc":"313"},{"messageId":"308","fix":"362","desc":"310"},{"messageId":"311","fix":"363","desc":"313"},{"messageId":"308","fix":"364","desc":"310"},{"messageId":"311","fix":"365","desc":"313"},{"messageId":"308","fix":"366","desc":"310"},{"messageId":"311","fix":"367","desc":"313"},{"messageId":"308","fix":"368","desc":"310"},{"messageId":"311","fix":"369","desc":"313"},{"messageId":"308","fix":"370","desc":"310"},{"messageId":"311","fix":"371","desc":"313"},{"messageId":"308","fix":"372","desc":"310"},{"messageId":"311","fix":"373","desc":"313"},{"messageId":"308","fix":"374","desc":"310"},{"messageId":"311","fix":"375","desc":"313"},"suggestUnknown",{"range":"376","text":"377"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"376","text":"378"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"379","text":"377"},{"range":"379","text":"378"},{"range":"380","text":"377"},{"range":"380","text":"378"},{"range":"381","text":"377"},{"range":"381","text":"378"},{"range":"382","text":"377"},{"range":"382","text":"378"},{"range":"383","text":"377"},{"range":"383","text":"378"},{"range":"384","text":"377"},{"range":"384","text":"378"},{"range":"385","text":"377"},{"range":"385","text":"378"},{"range":"386","text":"377"},{"range":"386","text":"378"},{"range":"387","text":"377"},{"range":"387","text":"378"},{"range":"388","text":"377"},{"range":"388","text":"378"},{"range":"389","text":"377"},{"range":"389","text":"378"},{"range":"390","text":"377"},{"range":"390","text":"378"},{"range":"391","text":"377"},{"range":"391","text":"378"},{"range":"392","text":"377"},{"range":"392","text":"378"},{"range":"393","text":"377"},{"range":"393","text":"378"},{"range":"394","text":"377"},{"range":"394","text":"378"},{"range":"395","text":"377"},{"range":"395","text":"378"},{"range":"396","text":"377"},{"range":"396","text":"378"},{"range":"397","text":"377"},{"range":"397","text":"378"},{"range":"398","text":"377"},{"range":"398","text":"378"},{"range":"399","text":"377"},{"range":"399","text":"378"},{"range":"400","text":"377"},{"range":"400","text":"378"},{"range":"401","text":"377"},{"range":"401","text":"378"},{"range":"402","text":"377"},{"range":"402","text":"378"},{"range":"403","text":"377"},{"range":"403","text":"378"},{"range":"404","text":"377"},{"range":"404","text":"378"},{"range":"405","text":"377"},{"range":"405","text":"378"},{"range":"406","text":"377"},{"range":"406","text":"378"},{"range":"407","text":"377"},{"range":"407","text":"378"},{"range":"408","text":"377"},{"range":"408","text":"378"},{"range":"409","text":"377"},{"range":"409","text":"378"},[174,177],"unknown","never",[202,205],[714,717],[304,307],[628,631],[675,678],[889,892],[939,942],[439,442],[870,873],[991,994],[1084,1087],[1145,1148],[1185,1188],[1316,1319],[1568,1571],[1584,1587],[1592,1595],[1598,1601],[1663,1666],[1841,1844],[1869,1872],[2013,2016],[2077,2080],[238,241],[338,341],[350,353],[272,275],[759,762],[255,258],[477,480],[616,619]]