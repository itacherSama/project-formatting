[{"D:\\progOther\\react\\test-work\\project-formatting\\src\\index.tsx":"1","D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\router.tsx":"2","D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\history.tsx":"3","D:\\progOther\\react\\test-work\\project-formatting\\src\\App.tsx":"4","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\MainPage\\index.tsx":"5","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\DownloadPage\\index.tsx":"6","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\FirstPage\\index.tsx":"7","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\ResizePage\\index.tsx":"8","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\event.ts":"9","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\stores\\kitsImages.ts":"10","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\base64Service.ts":"11","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\stores\\idxKitImages.ts":"12","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\store.ts":"13","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\stores\\kitsImagesSetting.ts":"14","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\stores\\images.ts":"15","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\localStorageService.ts":"16","D:\\progOther\\react\\test-work\\project-formatting\\src\\utils\\differentFunc.ts":"17","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\effect.ts":"18","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\DownloadBtn\\index.tsx":"19","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\index.tsx":"20","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\index.tsx":"21","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Gallery\\index.tsx":"22","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\CustomModal\\index.tsx":"23","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\BlockImgPreview\\index.tsx":"24","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Buttons\\controlStepperButtons\\index.tsx":"25","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\SettingsImg\\index.tsx":"26","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\imageService.ts":"27","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\fileService.ts":"28","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\index.tsx":"29","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Buttons\\CloseButton\\index.tsx":"30","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\DropzonePreview\\index.tsx":"31","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Thumb\\index.tsx":"32","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\WidthHeightFields\\index.tsx":"33"},{"size":348,"mtime":1627824421823,"results":"34","hashOfConfig":"35"},{"size":516,"mtime":1626601191462,"results":"36","hashOfConfig":"35"},{"size":1068,"mtime":1628446687540,"results":"37","hashOfConfig":"35"},{"size":234,"mtime":1626601191422,"results":"38","hashOfConfig":"35"},{"size":2542,"mtime":1626601191462,"results":"39","hashOfConfig":"35"},{"size":416,"mtime":1626601191454,"results":"40","hashOfConfig":"35"},{"size":908,"mtime":1628448226680,"results":"41","hashOfConfig":"35"},{"size":3808,"mtime":1628448824096,"results":"42","hashOfConfig":"35"},{"size":1428,"mtime":1628448061756,"results":"43","hashOfConfig":"35"},{"size":2333,"mtime":1628650439409,"results":"44","hashOfConfig":"35"},{"size":1743,"mtime":1628653042108,"results":"45","hashOfConfig":"35"},{"size":519,"mtime":1628444754480,"results":"46","hashOfConfig":"35"},{"size":1894,"mtime":1628445432849,"results":"47","hashOfConfig":"35"},{"size":1640,"mtime":1626601191454,"results":"48","hashOfConfig":"35"},{"size":668,"mtime":1628448103936,"results":"49","hashOfConfig":"35"},{"size":679,"mtime":1628652967363,"results":"50","hashOfConfig":"35"},{"size":1219,"mtime":1627829890771,"results":"51","hashOfConfig":"35"},{"size":1324,"mtime":1628448151441,"results":"52","hashOfConfig":"35"},{"size":912,"mtime":1626601191438,"results":"53","hashOfConfig":"35"},{"size":1010,"mtime":1626601191438,"results":"54","hashOfConfig":"35"},{"size":4448,"mtime":1627835818259,"results":"55","hashOfConfig":"35"},{"size":2381,"mtime":1628448022771,"results":"56","hashOfConfig":"35"},{"size":654,"mtime":1626601191438,"results":"57","hashOfConfig":"35"},{"size":5378,"mtime":1628447965582,"results":"58","hashOfConfig":"35"},{"size":843,"mtime":1626601191430,"results":"59","hashOfConfig":"35"},{"size":2149,"mtime":1628444699690,"results":"60","hashOfConfig":"35"},{"size":6616,"mtime":1628449019999,"results":"61","hashOfConfig":"35"},{"size":1049,"mtime":1628448953409,"results":"62","hashOfConfig":"35"},{"size":2390,"mtime":1628653140243,"results":"63","hashOfConfig":"35"},{"size":650,"mtime":1627832325450,"results":"64","hashOfConfig":"35"},{"size":898,"mtime":1628652984954,"results":"65","hashOfConfig":"35"},{"size":352,"mtime":1628448195392,"results":"66","hashOfConfig":"35"},{"size":459,"mtime":1627832981409,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"1y0f1os",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"71"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"71"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"71"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"71"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"71"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"71"},"D:\\progOther\\react\\test-work\\project-formatting\\src\\index.tsx",["150","151"],"import ReactDOM from 'react-dom';\nimport history from './router/history';\nimport router from './router/router';\n\nimport './index.css';\n\nconst render = async (location: any) => {\n  const element: any = await router.resolve(location);\n  ReactDOM.render(element, document.getElementById('root'));\n};\n\nrender(history.location);\nhistory.listen(render);\n",["152","153","154","155","156"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\router.tsx",["157"],"import React from 'react';\nimport UniversalRouter from 'universal-router';\nimport App from '../App';\nimport MainPage from '../pages/MainPage';\n\nconst routes = {\n  path: '/',\n  async action({ next }: any) {\n    const children = await next();\n    return <App>{children}</App>;\n  },\n  children: [\n    {\n      path: '',\n      async action() {\n        return <MainPage />;\n      },\n    },\n  ],\n};\n\nexport const basename = '';\n\nconst router = new UniversalRouter(routes, {\n  baseUrl: basename,\n});\n\nexport default router;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\history.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\App.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\MainPage\\index.tsx",["158","159","160"],"/* eslint-disable guard-for-in */\n/* eslint-disable no-restricted-syntax */\nimport React from 'react';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepContent from '@material-ui/core/StepContent';\nimport StepButton from '@material-ui/core/StepButton';\n\nimport FirstPage from '../FirstPage';\nimport ResizePage from '../ResizePage';\nimport DownloadPage from '../DownloadPage';\nimport { ISettingStepContent } from '../../interfaces/items';\n\nconst steps = ['Add images', 'Cropping images', 'Download images'];\n\nfunction getStepContent(settingStepContent: ISettingStepContent) {\n  switch (settingStepContent.step) {\n    case 0:\n      return <FirstPage settingStepContent={settingStepContent} />;\n    case 1:\n      return <ResizePage backStep={settingStepContent.handleBack} nextStep={settingStepContent.handleComplete} />;\n    case 2:\n      return <DownloadPage />;\n    default:\n      return 'Unknown step';\n  }\n}\n\nconst MainPage: React.FC = () => {\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [completed, setCompleted] = React.useState<any>({});\n\n  const visibleBtnPrev = activeStep !== 0;\n  const visibleBtnNext = activeStep !== steps.length - 1;\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleComplete = () => {\n    const newCompleted: any = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n    handleNext();\n  };\n\n  const handleStep = (step: number) => () => {\n    const newCompleted: any = completed;\n\n    if (newCompleted[step]) {\n      for (const d in newCompleted) {\n        if (step < Number(d)) newCompleted[d] = false;\n      }\n      setActiveStep(step);\n      setCompleted(newCompleted);\n    }\n  };\n\n  const handleBack = () => {\n    console.log('handleBack');\n\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  return (\n    <Stepper activeStep={activeStep} orientation=\"vertical\" nonLinear>\n      {steps.map((label: string, index: number) => (\n        <Step key={label}>\n          <StepButton completed={completed[index]} onClick={handleStep(index)}>\n            {label}\n          </StepButton>\n          <StepContent>\n            {getStepContent({\n              step: index,\n              handleComplete,\n              handleBack,\n              visibleBtnPrevArr: [visibleBtnPrev],\n              visibleBtnNextArr: [visibleBtnNext],\n            })}\n          </StepContent>\n        </Step>\n      ))}\n    </Stepper>\n  );\n};\n\nexport default MainPage;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\DownloadPage\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\FirstPage\\index.tsx",["161"],"import React from 'react';\nimport { useStore } from 'effector-react';\nimport Dropzone from '../../components/Dropzone';\nimport { cancelImg } from '../../effector/event';\nimport styles from './FirstPage.module.css';\n\nimport { IInfoImg } from '../../interfaces/items';\nimport ControlsStepperButtons from '../../components/Buttons/controlStepperButtons';\nimport { $images } from '../../effector/stores/images';\n\nconst FirstPage: React.FC<any> = ({ settingStepContent }) => {\n  const images: IInfoImg[] = useStore($images);\n  const disabledBtnNext: boolean = images.length === 0;\n\n  return (\n    <>\n      <div className={styles.DropzoneWrapper}>\n        <Dropzone images={images} onCancelImg={cancelImg} />\n      </div>\n      <div className={styles.blockButton}>\n        <ControlsStepperButtons disabledBtnNext={disabledBtnNext} {...settingStepContent} />\n      </div>\n    </>\n  );\n};\n\nexport default FirstPage;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\ResizePage\\index.tsx",["162","163","164"],"import React from 'react';\nimport { useStore } from 'effector-react';\nimport Button from '@material-ui/core/Button';\nimport { $modalState } from '../../effector/store';\nimport {\n  setCurrentCropImage,\n  setKitImages,\n  nextKitImages,\n  previousKitImages,\n  activeModal,\n  disableModal,\n  cancelCropImg,\n  setPointImg,\n  setKitImagesSettings,\n} from '../../effector/event';\nimport Gallery from '../../components/Gallery';\nimport Crop from '../../components/Crop';\nimport CustomModal from '../../components/CustomModal';\nimport styles from './ResizePage.module.css';\nimport { IobjIdxKitImages, IInfoImg, ISettingImg, ISettingsImage } from '../../interfaces/items';\nimport history from '../../router/history';\nimport BlockImgPreview from '../../components/BlockImgPreview';\nimport { convertFromBase64 } from '../../services/base64Service';\nimport { $idxKitImages } from '../../effector/stores/idxKitImages';\nimport { $kitsImagesSetting } from '../../effector/stores/kitsImagesSetting';\nimport { $images } from '../../effector/stores/images';\nimport { $kitsImages } from '../../effector/stores/kitsImages';\n\nconst ResizePage: React.FC<any> = ({ nextStep, backStep }) => {\n  const kitsImages = useStore($kitsImages);\n  const images: IInfoImg[] = useStore($images);\n  const kitsImagesSetting: ISettingsImage[] = useStore($kitsImagesSetting);\n  const idxKitImages: IobjIdxKitImages = useStore($idxKitImages);\n  const currentIdxKitImages: number = idxKitImages.idx;\n  const currenKitImg: any = kitsImages[currentIdxKitImages];\n  const currentImg: IInfoImg = images[currentIdxKitImages];\n  const currentImgSetting: ISettingsImage = kitsImagesSetting[currentIdxKitImages];\n  const modalState: boolean = useStore($modalState);\n\n  React.useEffect(() =>  {\n    setCurrentCropImage(kitsImages[currentIdxKitImages]);\n  }, [currentIdxKitImages, kitsImages] );\n\n  const addCropedImg = (base64Img: string, settingImg: ISettingImg) => {\n    convertFromBase64(base64Img, currenKitImg.length).then((fileImg: any) => {\n      console.log('fileImg', fileImg);\n      \n      setKitImagesSettings(     {\n        settingImg,\n        idx: currentIdxKitImages,\n\n      })\n\n      ;\n      setKitImages({\n        kitImages: [ ...currenKitImg, fileImg],\n        idx: currentIdxKitImages,\n      });\n    });\n  };\n\n  const onPreviousImage = () =>   {\n    previousKitImages();\n  };\n\n  const onNextImage = () => {\n    if (currentIdxKitImages === idxKitImages.maxIdx) {\n      nextStep();\n    } else {\n      nextKitImages();\n    }\n  };\n\n  const onActiveModal = () => {\n    activeModal();\n  };\n\n  const onCloseModal = () => {\n    disableModal();\n  };\n\n  if (!currentImg) {\n    history.navigate('/');\n    return null;\n  }\n\n  return (\n    <>\n      <BlockImgPreview currentImg={currentImg} setStatePoint={setPointImg} statePoint={currentImgSetting?.point} />\n\n      <div className={styles.kitImages}>\n        <Gallery\n          files={currenKitImg}\n          settings={currentImgSetting.items}\n          onActiveModal={onActiveModal}\n          onCancelCropImg={cancelCropImg}\n        />\n      </div>\n      <CustomModal open={modalState} onCloseModal={onCloseModal}>\n        <div className={styles.crop}>\n          <Crop\n            addCropedImg={addCropedImg}\n            point={currentImgSetting.point}\n            src={currentImg.preview!}\n            onCloseModal={onCloseModal}\n          />\n        </div>\n      </CustomModal>\n\n      {images.length > 0 && (\n        <div className={styles.buttons}>\n          <Button color=\"primary\" variant=\"contained\" onClick={currentIdxKitImages === 0 ? backStep : onPreviousImage}>\n            Назад\n          </Button>\n          <Button color=\"primary\" variant=\"contained\" onClick={onNextImage}>\n            Далее\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ResizePage;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\event.ts",["165","166","167","168","169","170","171","172","173","174","175","176"],"import { createEvent } from 'effector';\nimport { IInfoImg } from '../interfaces/items';\n\nexport const setImages = createEvent<IInfoImg[]>();\nexport const setCurrentCropImage = createEvent<IInfoImg[]>();\nexport const setLengthKitsImages = createEvent<number>();\nexport const setKitImages = createEvent<any>();\nexport const nextKitImages = createEvent();\nexport const previousKitImages = createEvent();\nexport const setCurrentIdx = createEvent<number>();\nexport const activeModal = createEvent();\nexport const disableModal = createEvent();\nexport const nextNumberImg = createEvent();\nexport const setColor = createEvent<any>();\nexport const setQuality = createEvent<any>();\nexport const setIsCroppedImages = createEvent<boolean>();\nexport const cancelImg = createEvent<number>();\nexport const cancelCropImg = createEvent<number>();\nexport const setCancelCropImg = createEvent<any>();\nexport const setKitsImages = createEvent<any>();\nexport const setTypeCrop = createEvent<string>();\nexport const setImagesFromLocalStorage = createEvent<any>();\nexport const setSettingForKitsImages = createEvent<any>();\nexport const setkitsImages = createEvent<any>();\nexport const setPointImg = createEvent<any>();\nexport const setPointImgInKitImages = createEvent<any>();\nexport const setKitImagesSettings = createEvent<any>();\nexport const setKitsImagesSettings = createEvent<any>();\nexport const setIsLocalDataLoaded = createEvent<boolean>();\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\stores\\kitsImages.ts",["177","178","179","180"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\base64Service.ts",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\stores\\idxKitImages.ts",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\store.ts",["181"],"import { createStore, sample } from 'effector';\nimport * as events from './event';\nimport * as effects from './effect';\nimport { IobjIdxKitImages, ITypeCrop, IPointOnImg } from '../interfaces/items';\nimport { $idxKitImages } from './stores/idxKitImages';\n\nsample({\n  source: $idxKitImages,\n  clock: events.cancelCropImg,\n  fn: (objIdxCurrentImg: IobjIdxKitImages, currentCropImgIdx: number) => ({\n    idx: objIdxCurrentImg.idx,\n    idxImg: currentCropImgIdx,\n  }),\n  target: events.setCancelCropImg,\n});\n\nsample({\n  source: $idxKitImages,\n  clock: events.setPointImg,\n  fn: (objIdxCurrentImg: IobjIdxKitImages, pointOnImg: IPointOnImg) => ({ idx: objIdxCurrentImg.idx, pointOnImg }),\n  target: events.setPointImgInKitImages,\n});\n\nexport const $modalState = createStore<boolean>(false)\n  .on(events.activeModal, () => true)\n\n  .on(events.disableModal, () => false);\n\nexport const $numberImg = createStore<number>(0).on(events.nextNumberImg, (state) => state + 1);\n\nexport const $quality = createStore<string>('').on(events.setColor, (state, color) => color);\n\nexport const $color = createStore<string>('').on(events.setQuality, (state, quality) => quality);\n\nexport const $isCroppedImages = createStore<boolean>(false).on(events.setIsCroppedImages, (state, flag) => flag);\n\nexport const $isLocalDataLoaded = createStore<boolean>(false).on(events.setIsLocalDataLoaded, (state, flag) => flag);\n\nexport const $typeCrop = createStore<ITypeCrop>({ current: 'px', last: null }).on(\n  events.setTypeCrop,\n  (state, typeCrop) => ({\n      current: typeCrop,\n      last: state.current,\n    })\n);\n\nconst getValueLS = async (key: string, cb: any) => {\n  const val = await localStorage.getItem(key);\n  if (typeof val === 'string') {\n    const objVal = JSON.parse(val);\n    cb(objVal);\n  }\n};\n\ngetValueLS('images', effects.fetchImagesFx);\ngetValueLS('settingForKitsImages', effects.fetchSettingsForImagesFx);\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\stores\\kitsImagesSetting.ts",["182"],"import { createStore } from 'effector';\nimport * as events from '../event';\nimport * as effects from '../effect';\nimport { copyObject, deleteItemFromArrByIdx, setLengthKitsImagesFunc } from '../../utils/differentFunc';\nimport { saveDataInLocalStorage } from '../../services/localStorageService';\n\nconst initialStatePoint = {\n  pointWidth: null,\n  pointPlace: {\n    x: null,\n    y: null,\n  },\n};\n\nexport const $kitsImagesSetting = createStore<any>([])\n  .on(events.setKitsImagesSettings, (state, kits) => kits)\n  .on(events.setKitImagesSettings, (state, { settingImg, idx }) => {\n    const newState = [...state];\n    newState[idx].items.push(settingImg);\n    return newState;\n  })\n  .on(events.cancelImg, deleteItemFromArrByIdx)\n  .on(events.setPointImgInKitImages, (state, { pointOnImg, idx }) => {\n    const newState = [...state];\n    const objSettings = newState[idx];\n\n    if (pointOnImg) {\n      objSettings.point = { ...pointOnImg };\n    } else {\n      objSettings.point = copyObject(initialStatePoint);\n    }\n\n    return newState;\n  })\n  .on(events.setCancelCropImg, (state, { idx, idxImg }) => {\n    const newState = [...state];\n    const objSettings = newState[idx];\n    objSettings.items.splice(idxImg, 1);\n\n    return newState;\n  })\n  .on(effects.fetchSettingsForImagesFx.doneData, (state, dataFromLocalStorage) => dataFromLocalStorage)\n  .on(events.setLengthKitsImages, (state, length) =>\n    setLengthKitsImagesFunc(state, length, {\n      point: initialStatePoint,\n      items: [],\n    })\n  );\n\n$kitsImagesSetting.watch((state) => {\n  if (state.length !== 0) {\n    saveDataInLocalStorage('settingForKitsImages', state);\n  }\n});\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\stores\\images.ts",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\localStorageService.ts",["183","184","185"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\utils\\differentFunc.ts",["186","187"],"import { IPointPlace, IobjIdxKitImages } from '../interfaces/items';\n\nexport const findNewCurrentIdx = (state: IobjIdxKitImages, operation: string): IobjIdxKitImages => {\n  const newIdx = operation === '-' ? state.idx - 1 : state.idx + 1;\n\n  const hasIdx = newIdx <= state.maxIdx && newIdx > -1;\n  if (!hasIdx) {\n    return state;\n  }\n\n  return {\n    ...state,\n    idx: newIdx,\n  };\n};\n\nexport const deleteItemFromArrByIdx = <T>(state: Array<T>, idx: number): Array<T> => {\n  const newState = [...state];\n  newState.splice(idx, 1);\n  return newState;\n};\n\nexport const copyObject = <T>(object: T): T => JSON.parse(JSON.stringify(object));\n\nexport const setLengthKitsImagesFunc = <T>(state: Array<T>, length: number, newItem: T): Array<T> => {\n  const newState = [...state];\n  if (length > state.length) {\n    const needIncreaseLength = length - state.length;\n    const newItems = new Array(needIncreaseLength).fill(0).map(() => copyObject(newItem));\n\n    newState.push(...newItems);\n  }\n  return newState;\n};\n\nexport const findPointOnCanvas = (obj: IPointPlace, canvas: HTMLCanvasElement, func: any): IPointPlace  => {\n  const x = func(canvas.width, obj.x);\n  const y = func(canvas.height, obj.y);\n  return { x, y };\n};\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\effect.ts",["188","189","190","191","192","193","194"],"import { createEffect } from 'effector';\nimport { convertBase64ItemsInFiles } from '../services/base64Service';\nimport { getImgFromPreviewFile, generateKitImages } from '../services/imageService';\nimport { IInfoImg } from '../interfaces/items';\n\nexport const fetchImagesFx = createEffect(async (data: any) => {\n  const req = await convertBase64ItemsInFiles(data);\n  return req;\n});\n\nexport const fetchSettingsForImagesFx = createEffect((data: any) => data);\n\nexport const generateKitsImages = createEffect(async (data: any): Promise<IInfoImg[][]> => {\n  const [images, settingsForKits] = data;\n  const kitsImages = [];\n  for (let idx = 0; idx < settingsForKits.length; idx++) {\n    const imageKitsettings = settingsForKits[idx];\n    const currentImg = images[idx];\n    const imgElement = await getImgFromPreviewFile(currentImg.preview);\n    const kitImages = await generateKitImages(imgElement, imageKitsettings);\n\n    kitsImages.push(kitImages);\n  }\n\n  return kitsImages;\n});\n\nexport const generateKitImagesByPoint = createEffect(async (data: any): Promise<any> => {\n  const { fileImage, kitImagesSetting, pointOnImg, idx } = data;\n\n  const imgElement = await getImgFromPreviewFile(fileImage.preview);\n  const kitImages = await generateKitImages(imgElement, kitImagesSetting, pointOnImg);\n\n  return { kitImages, idx };\n});\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\DownloadBtn\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\index.tsx",["195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { FC, useEffect, useRef, useState } from 'react';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\nimport { useStore } from 'effector-react';\nimport CropForm from './CropForm';\nimport { $typeCrop } from '../../effector/store';\nimport { ICrop } from '../../interfaces/components';\nimport { ICropFormData, IImgCropValue } from '../../interfaces/items';\nimport { getPxFromPercent, getPercentFromPx, getPositionByPoint, calcAspect } from '../../services/imageService';\n\nconst typeCropWords = ['px', '%', 'aspect'];\n\nconst Crop: FC<ICrop> = ({ addCropedImg, src, onCloseModal, point }) => {\n  const typeCrop = useStore($typeCrop);\n  const cropperRef = useRef<HTMLImageElement>(null);\n  const [cropData, setCropData] = useState<any>(null);\n  const [aspectState, setAspectState] = useState<ICropFormData>({\n    width: 4,\n    height: 3,\n  });\n  const [formKey, setFormKey] = useState(0);\n\n  useEffect(() => {\n    const newAspect = calcAspect(aspectState.width as number, aspectState.height as number);\n    if (newAspect && typeCrop.current === typeCropWords[2]) {\n      setMyAspect(newAspect as number);\n      transformDataByPointCrop();\n    } else if (typeCrop.last === typeCropWords[2]) {\n      cancelMyAspect();\n    }\n  }, [aspectState, typeCrop]);\n\n  const getCropper = () => {\n    const imageElement: any = cropperRef?.current;\n    const cropper: any = imageElement?.cropper;\n\n    return cropper;\n  };\n\n  const getPercentCropData = () => {\n    if (cropperRef.current && cropData.height && cropData.width) {\n      return getPercentFromPx(cropperRef.current!, { ...cropData });\n    }\n    return cropData;\n  };\n\n  const valueCrop = typeCrop.current === typeCropWords[1] ? getPercentCropData() : cropData;\n\n  const onCrop = () => {\n    const cropper: any = getCropper();\n    const newData = cropper.getData({ rounded: true });\n\n    setCropData(newData);\n  };\n\n  const transformDataByPointCrop = () => {\n    if (point) {\n      const cropper: any = getCropper();\n      const imgSettings = cropper.getImageData();\n      const cropperData = cropper.getData({ rounded: true });\n      const getData = getPositionByPoint(cropperData, point, imgSettings);\n\n      cropper.crop();\n      cropper.setData({ ...getData });\n    }\n  };\n\n  const getCropImage = () => {\n    const cropper: any = getCropper();\n    const cropperData = cropper.getData({ rounded: true });\n    const dataByImg = {\n      x: cropperData.x,\n      y: cropperData.y,\n      width: cropperData.width,\n      height: cropperData.height,\n    };\n    const base64Img = cropper.getCroppedCanvas().toDataURL();\n\n    addCropedImg(base64Img, dataByImg);\n    onCloseModal();\n  };\n\n  const setMyDataCrop = (objValue: IImgCropValue): void => {\n    const cropper: any = getCropper();\n    const imgSettings = cropper.getImageData();\n    const typeValue = objValue.type;\n    const newValue = objValue.value;\n\n    if (newValue === '') {\n      setCropData({ ...cropData, [typeValue]: newValue });\n      return;\n    }\n\n    let newData: any = {\n      [typeValue]: parseInt(newValue, 10),\n    };\n\n    if (typeCrop.current === typeCropWords[1]) {\n      newData = getPxFromPercent(cropperRef.current!, newData);\n    }\n\n    newData = {\n      ...cropData,\n      [typeValue]: newData[typeValue],\n    };\n\n    if (point.pointWidth) {\n      newData = getPositionByPoint(newData, point, imgSettings);\n    }\n\n    cropper.setData({ ...newData });\n  };\n\n  const setMyAspect = (data: number): void => {\n    const cropper: any = getCropper();\n    cropper.setAspectRatio(data);\n  };\n\n  const cancelMyAspect = (): void => {\n    const cropper: any = getCropper();\n    cropper.setAspectRatio(NaN);\n  };\n\n  const updateFields = () => {\n    setFormKey(Math.random());\n  };\n\n  return (\n    <>\n      <Cropper\n        ref={cropperRef}\n        autoCrop={false}\n        background={false}\n        crop={onCrop}\n        guides={false}\n        ready={() => {\n          transformDataByPointCrop();\n          updateFields();\n        }}\n        src={src}\n        viewMode={1}\n        zoomable={false}\n        responsive\n      />\n      <CropForm\n        key={formKey}\n        aspect={aspectState}\n        crop={valueCrop}\n        getCropImage={getCropImage}\n        typeCrop={typeCrop.current}\n        typeCropWords={typeCropWords}\n        onSetAspect={setAspectState}\n        onSetCrop={setMyDataCrop}\n      />\n    </>\n  );\n};\n\nexport default Crop;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Gallery\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\CustomModal\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\BlockImgPreview\\index.tsx",["210","211"],"import React from 'react';\nimport styles from './BlockImgPreview.module.css';\nimport {\n  calcPercentFromPx,\n  calcPxFromPercent,\n  calcWidthPoint,\n  calcWidthPointOnCanvas,\n} from '../../services/imageService';\nimport { findPointOnCanvas } from '../../utils/differentFunc';\nimport { IInfoImg, IPointOnImg, IPointPlace } from '../../interfaces/items';\n\nconst getOffset = (e: React.MouseEvent<HTMLCanvasElement>): number[] => {\n  const x = e.nativeEvent.offsetX;\n  const y = e.nativeEvent.offsetY;\n  return [x, y];\n};\n\nconst BlockImgPreview: React.FC<{\n  statePoint: IPointOnImg;\n  currentImg: IInfoImg,\n  setStatePoint: (item?: IPointOnImg) => void,\n}> = ({ currentImg, statePoint, setStatePoint }) => {\n  const canvasPreview: any = React.useRef(null);\n  const ImgPreview: any = React.useRef(null);\n\n  const [activeChange, setActiveChange] = React.useState<boolean>(false);\n  const [pxStatePoint, setPxStatePoint] = React.useState<IPointOnImg>(statePoint);\n  console.log('=================');\n\n  console.log('currentImg', currentImg);\n  console.log('setStatePoint', setStatePoint);\n  console.log('canvasPreview', canvasPreview);\n  console.log('ImgPreview', ImgPreview);\n  console.log('=================');\n  \n  const getPxWidthPoint = (pointWidth: number) => {\n    const widthPointPx = calcWidthPointOnCanvas(pointWidth, canvasPreview.current, calcPxFromPercent);\n    const defaultWidthPoint = 3;\n\n    if (widthPointPx === 0) {\n      return defaultWidthPoint;\n    }\n    return widthPointPx;\n  };\n\n  const calcPxStatePoint = React.useCallback((argStatePoint: IPointOnImg): IPointOnImg => {\n    if (argStatePoint?.pointPlace?.x && argStatePoint?.pointPlace?.y && argStatePoint.pointWidth) {\n      return {\n        pointPlace: findPointOnCanvas(argStatePoint.pointPlace, canvasPreview.current, calcPxFromPercent),\n        pointWidth: getPxWidthPoint(argStatePoint.pointWidth),\n      };\n    }\n\n    return statePoint;\n  }, [statePoint]);\n\n  const resize = React.useCallback(() => {\n    const canvas = canvasPreview.current;\n\n    const cs = getComputedStyle(ImgPreview.current);\n    const width = parseInt(cs.getPropertyValue('width'), 10);\n    const height = parseInt(cs.getPropertyValue('height'), 10);\n    canvas.width = width;\n    canvas.height = height;\n\n    setPxStatePoint(calcPxStatePoint(statePoint));\n  }, [calcPxStatePoint, statePoint]);\n\n  const draw = (argStatePoint: IPointOnImg): void => {\n    const canvas: HTMLCanvasElement = canvasPreview.current;\n    const ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (argStatePoint.pointPlace.x && argStatePoint.pointPlace.y) {\n      ctx.fillStyle = 'red';\n      ctx.beginPath();\n\n      ctx.arc(argStatePoint.pointPlace.x, argStatePoint.pointPlace.y, argStatePoint.pointWidth, 0, 2 * Math.PI, true);\n\n      ctx.fill();\n    }\n  };\n\n  React.useEffect(() => {\n    resize();\n  }, [resize, currentImg]);\n\n  React.useEffect(() => {\n    setPxStatePoint(calcPxStatePoint(statePoint));\n  }, [statePoint, calcPxStatePoint]);\n\n  React.useEffect(() => {\n    draw(pxStatePoint);\n  }, [pxStatePoint]);\n\n  React.useLayoutEffect(() => {\n    window.addEventListener('resize', resize);\n    return () => {\n      window.removeEventListener('resize', resize);\n    };\n  }, [statePoint, resize]);\n\n  const getPercentWidthPoint = (firstObj: IPointPlace, secondObj?: IPointPlace) => {\n    const pointWidth = calcWidthPoint(firstObj, secondObj);\n    const widthPointPercent = calcWidthPointOnCanvas(pointWidth, canvasPreview.current, calcPercentFromPx);\n\n    return widthPointPercent;\n  };\n\n  const onDown = (e: React.MouseEvent<HTMLCanvasElement>): void | false => {\n    if (e.button === 2) {\n      return false;\n    }\n    const [x, y] = getOffset(e);\n    const newState = { x, y };\n    setActiveChange(true);\n\n    setPxStatePoint({\n      ...pxStatePoint,\n      pointWidth: calcWidthPoint(pxStatePoint.pointPlace),\n      pointPlace: newState,\n    });\n  };\n\n  const onUp = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (activeChange) {\n      const [x, y] = getOffset(e);\n\n      setActiveChange(false);\n      setStatePoint({\n        ...pxStatePoint,\n        pointWidth: getPercentWidthPoint(pxStatePoint.pointPlace, { x, y }),\n        pointPlace: findPointOnCanvas(pxStatePoint.pointPlace, canvasPreview.current, calcPercentFromPx),\n      });\n    }\n  };\n\n  const onMove = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const [x, y] = getOffset(e);\n    if (activeChange) {\n      const currentState = {\n        ...pxStatePoint,\n        pointWidth: calcWidthPoint(pxStatePoint.pointPlace, { x, y }),\n      };\n      draw(currentState);\n    }\n  };\n\n  const cancelPoint = (e: React.MouseEvent): void => {\n    if (e) {\n      e.preventDefault();\n    }\n    setStatePoint();\n  };\n\n  /*   const handleTouchStart = (): void => {\n    timer = setTimeout(cancelPoint, touchduration);\n  };\n\n  const handleTouchEnd = (): void => {\n    if (timer) clearTimeout(timer);\n  }; */\n\n  return (\n    <div className={styles.blockImgPreview}>\n      <img ref={ImgPreview} alt=\"main\" src={currentImg.preview} />\n      <canvas\n        ref={canvasPreview}\n        /*       onClick={ setPoint } */\n        onContextMenu={cancelPoint}\n        onMouseDown={onDown}\n        onMouseLeave={onUp}\n        onMouseMove={onMove}\n        onMouseUp={onUp}\n      />\n    </div>\n  );\n};\n\nexport default BlockImgPreview;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Buttons\\controlStepperButtons\\index.tsx",["212","213","214"],"import { Button } from '@material-ui/core';\nimport React from 'react';\n\nimport styles from './controlStepperButtons.module.css';\n\nconst ControlsStepperButtons: React.FC<any> = ({\n  handleBack,\n  handleComplete,\n  visibleBtnPrevArr,\n  visibleBtnNextArr,\n  disabledBtnPrev = false,\n  disabledBtnNext = false,\n}) => (\n  <div>\n    {visibleBtnPrevArr.every((el: any) => el === true) && (\n      <Button className={styles.button} disabled={disabledBtnPrev} onClick={handleBack}>\n        НАЗАД\n      </Button>\n      )}\n    {visibleBtnNextArr.every((el: any) => el === true) && (\n      <Button\n        className={styles.button}\n        color=\"primary\"\n        disabled={disabledBtnNext}\n        variant=\"contained\"\n        onClick={handleComplete}>\n        ДАЛЕЕ\n      </Button>\n      )}\n  </div>\n  );\n\nexport default ControlsStepperButtons;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\SettingsImg\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\imageService.ts",["215","216","217","218"],"import { IPointPlace,\n  ICropFormData,\n  IPointOnImg,\n  IImgSettingsNaturalSize,\n  ISettingImg,\n  IInfoImg,\n  ISettingsImage,\n} from '../interfaces/items';\n\nexport const getImgFromPreviewFile = (preview: string): Promise<HTMLImageElement> => new Promise((resolve) => {\n    const img: HTMLImageElement = new Image();\n    img.onload = () => {\n      resolve(img);\n    };\n    img.src = preview;\n  });\n\nexport const calcProportion = (firstArg: number, necessarySize: number, secondArg: number): number => {\n  const propotion: number = Math.round(firstArg * (necessarySize / secondArg));\n  return propotion;\n};\n\nexport const getTypeByPropotion = (proportionWidth: number, proportionHeight: number, types: string[]): string => {\n  if (proportionWidth / proportionHeight > 1) {\n    return types[0];\n  }\n    return types[1];\n};\n\nexport const calcPxFromPercent = (naturalSize: number, val: number): number => {\n  const pixelVal = Math.round(naturalSize * (val / 100));\n  return pixelVal;\n};\n\nexport const calcPercentFromPx = (naturalSize: number, val: number): number => {\n  const percentVal = Math.round((val / naturalSize) * 100);\n  return percentVal;\n};\n\nexport const getPxFromPercent = (image: HTMLImageElement, objCrop: ICropFormData): ICropFormData => ({\n    ...objCrop,\n    width: calcPxFromPercent(image.naturalWidth, objCrop.width), \n    height: calcPxFromPercent(image.naturalHeight, objCrop.height),\n  });\n\nexport const getPercentFromPx = (image: HTMLImageElement, objCrop: ICropFormData): ICropFormData => ({\n  ...objCrop,\n  width: calcPercentFromPx(image.naturalWidth, objCrop.width), \n  height: calcPercentFromPx(image.naturalHeight, objCrop.height),\n});\n\nexport const calcAspect = (width: number, height: number): number | boolean => {\n  if (height <= 0 || width <= 0) {\n    return false;\n  }\n  const aspect = width / height;\n  return aspect;\n};\n\nexport const generateImagesBySettings = async (img: HTMLImageElement, settings: ISettingImg): Promise<Blob> => {\n  const canvas = document.createElement('canvas');\n  canvas.width = settings.width;\n  canvas.height = settings.height;\n\n  const context = canvas.getContext('2d');\n\n  context!.drawImage(\n    img,\n    settings.x,\n    settings.y,\n    settings.width,\n    settings.height,\n    0,\n    0,\n    settings.width,\n    settings.height\n  );\n\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(\n      (blob) => {\n        if (blob) {\n          resolve(blob);\n        }\n        reject();\n      },\n      'image/jpeg',\n      1\n    );\n  });\n};\n\nexport const getPositionByPoint = (data: ICropFormData, point: IPointOnImg, imgSettings: IImgSettingsNaturalSize): ISettingImg => {\n  const pointFromPx = {\n    pointPlace: {\n      x: calcPxFromPercent(imgSettings.naturalWidth, point.pointPlace.x),\n      y: calcPxFromPercent(imgSettings.naturalHeight, point.pointPlace.y),\n    },\n    pointWidth: calcPxFromPercent(imgSettings.naturalHeight, point.pointWidth),\n  };\n\n  const radius = pointFromPx.pointWidth;\n\n  const minSide = radius * 2;\n\n  const newWidth = Math.max(minSide, data.width);\n  const newHeight = Math.max(minSide, data.height);\n\n  const newLeft = pointFromPx.pointPlace.x - newWidth / 2;\n  const newTop = pointFromPx.pointPlace.y - newHeight / 2;\n\n  return {\n    ...data,\n    width: newWidth,\n    height: newHeight,\n    x: newLeft >= 0 ? newLeft : 0,\n    y: newTop >= 0 ? newTop : 0,\n  };\n};\n\nexport const getPositionByPointDouble = (\n  data: ICropFormData,\n  point: IPointOnImg,\n  imgSettings: IImgSettingsNaturalSize\n): ISettingImg => {\n  const pointFromPx = {\n    x: calcPxFromPercent(imgSettings.naturalWidth, point.pointPlace.x),\n    y: calcPxFromPercent(imgSettings.naturalHeight, point.pointPlace.y),\n  };\n  const halfWidth = data.width / 2;\n  const halfHeight = data.height / 2;\n\n  let newPoints: any = {\n    newLeft: pointFromPx.x - halfWidth,\n    newTop: pointFromPx.y - halfHeight,\n    newRight: pointFromPx.x + halfWidth,\n    newBot: pointFromPx.y + halfHeight,\n  };\n\n  if (imgSettings.naturalWidth < newPoints.newRight) {\n    const needPxW = newPoints.newRight - imgSettings.naturalWidth;\n    const newRight = newPoints.newRight - needPxW;\n    const newLeft = newPoints.newLeft - needPxW;\n    newPoints = {\n      ...newPoints,\n      newRight,\n      newLeft,\n    };\n  }\n\n  if (imgSettings.naturalHeight < newPoints.newBot) {\n    const needPxH = newPoints.newBot - imgSettings.naturalHeight;\n    const newBot = newPoints.newBot - needPxH;\n    const newTop = newPoints.newTop - needPxH;\n    newPoints = {\n      ...newPoints,\n      newBot,\n      newTop,\n    };\n  }\n\n  return {\n    ...data,\n    x: newPoints.newLeft >= 0 ? newPoints.newLeft : 0,\n    y: newPoints.newTop >= 0 ? newPoints.newTop : 0,\n  };\n};\n\nexport const generateKitImages = async (\n  imgElement: HTMLImageElement,\n  kitSettings: ISettingsImage,\n  newPoint?: IPointOnImg\n): Promise<IInfoImg[]> => {\n  const kitImages: IInfoImg[] = [];\n  for (let idxEl = 0; idxEl < kitSettings.items.length; idxEl++) {\n    let settings = kitSettings.items[idxEl];\n    if (newPoint) {\n      settings = getPositionByPointDouble(settings, newPoint, imgElement);\n    }\n    \n    const blobImg: Blob = await generateImagesBySettings(imgElement, settings);\n    const fileImg: IInfoImg = {\n      infoByFile: new File([blobImg], `${idxEl}.jpg`),\n    };\n    fileImg.preview = URL.createObjectURL(fileImg);\n\n    kitImages.push(fileImg);\n  }\n  return kitImages;\n};\n\nexport const calcMinMaxValue = (first: number, second: number): number[] => {\n  if (first > second) {\n    return [second, first];\n  }\n  return [first, second];\n};\n\nexport const calcWidthPoint = (firstObj: IPointPlace, secondObj?: IPointPlace): number => {\n  const defaultWidth = 3;\n  \n  if (!secondObj) {\n    return defaultWidth;\n  }\n\n  const [minX, maxX] = calcMinMaxValue(firstObj.x, secondObj.x);\n  const [minY, maxY] = calcMinMaxValue(firstObj.y, secondObj.y);\n\n  const newWidth = {\n    x: Math.round(maxX - minX),\n    y: Math.round(maxY - minY),\n  };\n\n  const [, maxNewWidth] = calcMinMaxValue(newWidth.x, newWidth.y);\n\n  return Math.max(maxNewWidth, defaultWidth);\n};\n\nexport const calcWidthPointOnCanvas = (pointWidth: number, canvas: HTMLCanvasElement, func: any): number => {\n  const maxVal = Math.max(canvas.width, canvas.height);\n  const widthPercent = func(maxVal, pointWidth);\n  return widthPercent;\n};\n\nexport const calcPlacePoint = (start: IPointPlace, end: IPointPlace): IPointPlace => {\n  const halfWidth = {\n    x: Math.round((end.x! - start.x!) / 2),\n    y: Math.round((end.y! - start.y!) / 2),\n  };\n\n  const newPointPlace = {\n    x: halfWidth.x + start.x!,\n    y: halfWidth.y + start.y!,\n  };\n\n  return newPointPlace;\n};\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\fileService.ts",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\index.tsx",["219","220","221","222","223","224"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Buttons\\CloseButton\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\DropzonePreview\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Thumb\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\WidthHeightFields\\index.tsx",["225"],"import React, { FC } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst WidthHeightFields: FC<any> = ({ crop, onSetHeight, onSetWidth }) => {\n  if (!crop) return <div />;\n\n  return (\n    <>\n      <TextField defaultValue={crop.width} label=\"Width\" type=\"number\" onChange={onSetWidth} />\n      <TextField defaultValue={crop.height} label=\"Height\" type=\"number\" onChange={onSetHeight} />\n    </>\n  );\n};\n\nexport default WidthHeightFields;\n",{"ruleId":"226","severity":1,"message":"227","line":7,"column":33,"nodeType":"228","messageId":"229","endLine":7,"endColumn":36,"suggestions":"230"},{"ruleId":"226","severity":1,"message":"227","line":8,"column":18,"nodeType":"228","messageId":"229","endLine":8,"endColumn":21,"suggestions":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"226","severity":1,"message":"227","line":8,"column":26,"nodeType":"228","messageId":"229","endLine":8,"endColumn":29,"suggestions":"242"},{"ruleId":"226","severity":1,"message":"227","line":31,"column":52,"nodeType":"228","messageId":"229","endLine":31,"endColumn":55,"suggestions":"243"},{"ruleId":"226","severity":1,"message":"227","line":41,"column":25,"nodeType":"228","messageId":"229","endLine":41,"endColumn":28,"suggestions":"244"},{"ruleId":"226","severity":1,"message":"227","line":48,"column":25,"nodeType":"228","messageId":"229","endLine":48,"endColumn":28,"suggestions":"245"},{"ruleId":"226","severity":1,"message":"227","line":11,"column":27,"nodeType":"228","messageId":"229","endLine":11,"endColumn":30,"suggestions":"246"},{"ruleId":"226","severity":1,"message":"227","line":29,"column":28,"nodeType":"228","messageId":"229","endLine":29,"endColumn":31,"suggestions":"247"},{"ruleId":"226","severity":1,"message":"227","line":35,"column":23,"nodeType":"228","messageId":"229","endLine":35,"endColumn":26,"suggestions":"248"},{"ruleId":"226","severity":1,"message":"227","line":45,"column":70,"nodeType":"228","messageId":"229","endLine":45,"endColumn":73,"suggestions":"249"},{"ruleId":"226","severity":1,"message":"227","line":7,"column":41,"nodeType":"228","messageId":"229","endLine":7,"endColumn":44,"suggestions":"250"},{"ruleId":"226","severity":1,"message":"227","line":14,"column":37,"nodeType":"228","messageId":"229","endLine":14,"endColumn":40,"suggestions":"251"},{"ruleId":"226","severity":1,"message":"227","line":15,"column":39,"nodeType":"228","messageId":"229","endLine":15,"endColumn":42,"suggestions":"252"},{"ruleId":"226","severity":1,"message":"227","line":19,"column":45,"nodeType":"228","messageId":"229","endLine":19,"endColumn":48,"suggestions":"253"},{"ruleId":"226","severity":1,"message":"227","line":20,"column":42,"nodeType":"228","messageId":"229","endLine":20,"endColumn":45,"suggestions":"254"},{"ruleId":"226","severity":1,"message":"227","line":22,"column":54,"nodeType":"228","messageId":"229","endLine":22,"endColumn":57,"suggestions":"255"},{"ruleId":"226","severity":1,"message":"227","line":23,"column":52,"nodeType":"228","messageId":"229","endLine":23,"endColumn":55,"suggestions":"256"},{"ruleId":"226","severity":1,"message":"227","line":24,"column":42,"nodeType":"228","messageId":"229","endLine":24,"endColumn":45,"suggestions":"257"},{"ruleId":"226","severity":1,"message":"227","line":25,"column":40,"nodeType":"228","messageId":"229","endLine":25,"endColumn":43,"suggestions":"258"},{"ruleId":"226","severity":1,"message":"227","line":26,"column":51,"nodeType":"228","messageId":"229","endLine":26,"endColumn":54,"suggestions":"259"},{"ruleId":"226","severity":1,"message":"227","line":27,"column":49,"nodeType":"228","messageId":"229","endLine":27,"endColumn":52,"suggestions":"260"},{"ruleId":"226","severity":1,"message":"227","line":28,"column":50,"nodeType":"228","messageId":"229","endLine":28,"endColumn":53,"suggestions":"261"},{"ruleId":"226","severity":1,"message":"227","line":42,"column":23,"nodeType":"228","messageId":"229","endLine":42,"endColumn":26,"suggestions":"262"},{"ruleId":"226","severity":1,"message":"227","line":42,"column":29,"nodeType":"228","messageId":"229","endLine":42,"endColumn":32,"suggestions":"263"},{"ruleId":"226","severity":1,"message":"227","line":52,"column":17,"nodeType":"228","messageId":"229","endLine":52,"endColumn":20,"suggestions":"264"},{"ruleId":"226","severity":1,"message":"227","line":70,"column":38,"nodeType":"228","messageId":"229","endLine":70,"endColumn":41,"suggestions":"265"},{"ruleId":"226","severity":1,"message":"227","line":47,"column":44,"nodeType":"228","messageId":"229","endLine":47,"endColumn":47,"suggestions":"266"},{"ruleId":"226","severity":1,"message":"227","line":15,"column":47,"nodeType":"228","messageId":"229","endLine":15,"endColumn":50,"suggestions":"267"},{"ruleId":"226","severity":1,"message":"227","line":4,"column":44,"nodeType":"228","messageId":"229","endLine":4,"endColumn":47,"suggestions":"268"},{"ruleId":"269","severity":1,"message":"270","line":9,"column":59,"nodeType":"271","messageId":"272","endLine":9,"endColumn":68},{"ruleId":"226","severity":1,"message":"227","line":9,"column":65,"nodeType":"228","messageId":"229","endLine":9,"endColumn":68,"suggestions":"273"},{"ruleId":"269","severity":1,"message":"274","line":36,"column":80,"nodeType":"271","messageId":"272","endLine":36,"endColumn":89},{"ruleId":"226","severity":1,"message":"227","line":36,"column":86,"nodeType":"228","messageId":"229","endLine":36,"endColumn":89,"suggestions":"275"},{"ruleId":"226","severity":1,"message":"227","line":6,"column":56,"nodeType":"228","messageId":"229","endLine":6,"endColumn":59,"suggestions":"276"},{"ruleId":"226","severity":1,"message":"227","line":11,"column":61,"nodeType":"228","messageId":"229","endLine":11,"endColumn":64,"suggestions":"277"},{"ruleId":"226","severity":1,"message":"227","line":13,"column":61,"nodeType":"228","messageId":"229","endLine":13,"endColumn":64,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":19,"column":24,"nodeType":"281","messageId":"282","endLine":19,"endColumn":71},{"ruleId":"279","severity":1,"message":"280","line":20,"column":23,"nodeType":"281","messageId":"282","endLine":20,"endColumn":76},{"ruleId":"226","severity":1,"message":"227","line":28,"column":67,"nodeType":"228","messageId":"229","endLine":28,"endColumn":70,"suggestions":"283"},{"ruleId":"226","severity":1,"message":"227","line":28,"column":81,"nodeType":"228","messageId":"229","endLine":28,"endColumn":84,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":4,"column":8,"nodeType":"287","endLine":4,"endColumn":36},{"ruleId":"226","severity":1,"message":"227","line":18,"column":44,"nodeType":"228","messageId":"229","endLine":18,"endColumn":47,"suggestions":"288"},{"ruleId":"289","severity":1,"message":"290","line":28,"column":7,"nodeType":"271","messageId":"291","endLine":28,"endColumn":18},{"ruleId":"289","severity":1,"message":"292","line":29,"column":7,"nodeType":"271","messageId":"291","endLine":29,"endColumn":31},{"ruleId":"289","severity":1,"message":"293","line":31,"column":7,"nodeType":"271","messageId":"291","endLine":31,"endColumn":21},{"ruleId":"294","severity":1,"message":"295","line":33,"column":6,"nodeType":"296","endLine":33,"endColumn":29,"suggestions":"297"},{"ruleId":"226","severity":1,"message":"227","line":36,"column":25,"nodeType":"228","messageId":"229","endLine":36,"endColumn":28,"suggestions":"298"},{"ruleId":"226","severity":1,"message":"227","line":37,"column":20,"nodeType":"228","messageId":"229","endLine":37,"endColumn":23,"suggestions":"299"},{"ruleId":"226","severity":1,"message":"227","line":52,"column":20,"nodeType":"228","messageId":"229","endLine":52,"endColumn":23,"suggestions":"300"},{"ruleId":"226","severity":1,"message":"227","line":60,"column":22,"nodeType":"228","messageId":"229","endLine":60,"endColumn":25,"suggestions":"301"},{"ruleId":"226","severity":1,"message":"227","line":71,"column":20,"nodeType":"228","messageId":"229","endLine":71,"endColumn":23,"suggestions":"302"},{"ruleId":"226","severity":1,"message":"227","line":86,"column":20,"nodeType":"228","messageId":"229","endLine":86,"endColumn":23,"suggestions":"303"},{"ruleId":"226","severity":1,"message":"227","line":96,"column":18,"nodeType":"228","messageId":"229","endLine":96,"endColumn":21,"suggestions":"304"},{"ruleId":"226","severity":1,"message":"227","line":117,"column":20,"nodeType":"228","messageId":"229","endLine":117,"endColumn":23,"suggestions":"305"},{"ruleId":"226","severity":1,"message":"227","line":122,"column":20,"nodeType":"228","messageId":"229","endLine":122,"endColumn":23,"suggestions":"306"},{"ruleId":"226","severity":1,"message":"227","line":23,"column":24,"nodeType":"228","messageId":"229","endLine":23,"endColumn":27,"suggestions":"307"},{"ruleId":"226","severity":1,"message":"227","line":24,"column":21,"nodeType":"228","messageId":"229","endLine":24,"endColumn":24,"suggestions":"308"},{"ruleId":"226","severity":1,"message":"227","line":6,"column":40,"nodeType":"228","messageId":"229","endLine":6,"endColumn":43,"suggestions":"309"},{"ruleId":"226","severity":1,"message":"227","line":15,"column":35,"nodeType":"228","messageId":"229","endLine":15,"endColumn":38,"suggestions":"310"},{"ruleId":"226","severity":1,"message":"227","line":20,"column":35,"nodeType":"228","messageId":"229","endLine":20,"endColumn":38,"suggestions":"311"},{"ruleId":"226","severity":1,"message":"227","line":133,"column":18,"nodeType":"228","messageId":"229","endLine":133,"endColumn":21,"suggestions":"312"},{"ruleId":"279","severity":1,"message":"280","line":181,"column":27,"nodeType":"281","messageId":"282","endLine":181,"endColumn":79},{"ruleId":"269","severity":1,"message":"274","line":219,"column":87,"nodeType":"271","messageId":"272","endLine":219,"endColumn":96},{"ruleId":"226","severity":1,"message":"227","line":219,"column":93,"nodeType":"228","messageId":"229","endLine":219,"endColumn":96,"suggestions":"313"},{"ruleId":"226","severity":1,"message":"227","line":20,"column":54,"nodeType":"228","messageId":"229","endLine":20,"endColumn":57,"suggestions":"314"},{"ruleId":"226","severity":1,"message":"227","line":38,"column":29,"nodeType":"228","messageId":"229","endLine":38,"endColumn":32,"suggestions":"315"},{"ruleId":"226","severity":1,"message":"227","line":47,"column":29,"nodeType":"228","messageId":"229","endLine":47,"endColumn":32,"suggestions":"316"},{"ruleId":"226","severity":1,"message":"227","line":58,"column":16,"nodeType":"228","messageId":"229","endLine":58,"endColumn":19,"suggestions":"317"},{"ruleId":"226","severity":1,"message":"227","line":58,"column":31,"nodeType":"228","messageId":"229","endLine":58,"endColumn":34,"suggestions":"318"},{"ruleId":"226","severity":1,"message":"227","line":58,"column":47,"nodeType":"228","messageId":"229","endLine":58,"endColumn":50,"suggestions":"319"},{"ruleId":"226","severity":1,"message":"227","line":4,"column":29,"nodeType":"228","messageId":"229","endLine":4,"endColumn":32,"suggestions":"320"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["321","322"],["323","324"],"lines-around-directive",["325"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["326","327"],["328","329"],["330","331"],["332","333"],["334","335"],["336","337"],["338","339"],["340","341"],["342","343"],["344","345"],["346","347"],["348","349"],["350","351"],["352","353"],["354","355"],["356","357"],["358","359"],["360","361"],["362","363"],["364","365"],["366","367"],["368","369"],["370","371"],["372","373"],["374","375"],["376","377"],["378","379"],"@typescript-eslint/explicit-module-boundary-types","Argument 'data' should be typed with a non-any type.","Identifier","anyTypedArg",["380","381"],"Argument 'func' should be typed with a non-any type.",["382","383"],["384","385"],["386","387"],["388","389"],"no-await-in-loop","Unexpected `await` inside a loop.","AwaitExpression","unexpectedAwait",["390","391"],["392","393"],"import/no-extraneous-dependencies","'cropperjs' should be listed in the project's dependencies. Run 'npm i -S cropperjs' to add it","Literal",["394","395"],"@typescript-eslint/no-use-before-define","'setMyAspect' was used before it was defined.","noUseBeforeDefine","'transformDataByPointCrop' was used before it was defined.","'cancelMyAspect' was used before it was defined.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cancelMyAspect', 'setMyAspect', and 'transformDataByPointCrop'. Either include them or remove the dependency array.","ArrayExpression",["396"],["397","398"],["399","400"],["401","402"],["403","404"],["405","406"],["407","408"],["409","410"],["411","412"],["413","414"],["415","416"],["417","418"],["419","420"],["421","422"],["423","424"],["425","426"],["427","428"],["429","430"],["431","432"],["433","434"],["435","436"],["437","438"],["439","440"],["441","442"],{"messageId":"443","fix":"444","desc":"445"},{"messageId":"446","fix":"447","desc":"448"},{"messageId":"443","fix":"449","desc":"445"},{"messageId":"446","fix":"450","desc":"448"},"padding-line-between-statements",{"messageId":"443","fix":"451","desc":"445"},{"messageId":"446","fix":"452","desc":"448"},{"messageId":"443","fix":"453","desc":"445"},{"messageId":"446","fix":"454","desc":"448"},{"messageId":"443","fix":"455","desc":"445"},{"messageId":"446","fix":"456","desc":"448"},{"messageId":"443","fix":"457","desc":"445"},{"messageId":"446","fix":"458","desc":"448"},{"messageId":"443","fix":"459","desc":"445"},{"messageId":"446","fix":"460","desc":"448"},{"messageId":"443","fix":"461","desc":"445"},{"messageId":"446","fix":"462","desc":"448"},{"messageId":"443","fix":"463","desc":"445"},{"messageId":"446","fix":"464","desc":"448"},{"messageId":"443","fix":"465","desc":"445"},{"messageId":"446","fix":"466","desc":"448"},{"messageId":"443","fix":"467","desc":"445"},{"messageId":"446","fix":"468","desc":"448"},{"messageId":"443","fix":"469","desc":"445"},{"messageId":"446","fix":"470","desc":"448"},{"messageId":"443","fix":"471","desc":"445"},{"messageId":"446","fix":"472","desc":"448"},{"messageId":"443","fix":"473","desc":"445"},{"messageId":"446","fix":"474","desc":"448"},{"messageId":"443","fix":"475","desc":"445"},{"messageId":"446","fix":"476","desc":"448"},{"messageId":"443","fix":"477","desc":"445"},{"messageId":"446","fix":"478","desc":"448"},{"messageId":"443","fix":"479","desc":"445"},{"messageId":"446","fix":"480","desc":"448"},{"messageId":"443","fix":"481","desc":"445"},{"messageId":"446","fix":"482","desc":"448"},{"messageId":"443","fix":"483","desc":"445"},{"messageId":"446","fix":"484","desc":"448"},{"messageId":"443","fix":"485","desc":"445"},{"messageId":"446","fix":"486","desc":"448"},{"messageId":"443","fix":"487","desc":"445"},{"messageId":"446","fix":"488","desc":"448"},{"messageId":"443","fix":"489","desc":"445"},{"messageId":"446","fix":"490","desc":"448"},{"messageId":"443","fix":"491","desc":"445"},{"messageId":"446","fix":"492","desc":"448"},{"messageId":"443","fix":"493","desc":"445"},{"messageId":"446","fix":"494","desc":"448"},{"messageId":"443","fix":"495","desc":"445"},{"messageId":"446","fix":"496","desc":"448"},{"messageId":"443","fix":"497","desc":"445"},{"messageId":"446","fix":"498","desc":"448"},{"messageId":"443","fix":"499","desc":"445"},{"messageId":"446","fix":"500","desc":"448"},{"messageId":"443","fix":"501","desc":"445"},{"messageId":"446","fix":"502","desc":"448"},{"messageId":"443","fix":"503","desc":"445"},{"messageId":"446","fix":"504","desc":"448"},{"messageId":"443","fix":"505","desc":"445"},{"messageId":"446","fix":"506","desc":"448"},{"messageId":"443","fix":"507","desc":"445"},{"messageId":"446","fix":"508","desc":"448"},{"messageId":"443","fix":"509","desc":"445"},{"messageId":"446","fix":"510","desc":"448"},{"messageId":"443","fix":"511","desc":"445"},{"messageId":"446","fix":"512","desc":"448"},{"messageId":"443","fix":"513","desc":"445"},{"messageId":"446","fix":"514","desc":"448"},{"messageId":"443","fix":"515","desc":"445"},{"messageId":"446","fix":"516","desc":"448"},{"messageId":"443","fix":"517","desc":"445"},{"messageId":"446","fix":"518","desc":"448"},{"messageId":"443","fix":"519","desc":"445"},{"messageId":"446","fix":"520","desc":"448"},{"desc":"521","fix":"522"},{"messageId":"443","fix":"523","desc":"445"},{"messageId":"446","fix":"524","desc":"448"},{"messageId":"443","fix":"525","desc":"445"},{"messageId":"446","fix":"526","desc":"448"},{"messageId":"443","fix":"527","desc":"445"},{"messageId":"446","fix":"528","desc":"448"},{"messageId":"443","fix":"529","desc":"445"},{"messageId":"446","fix":"530","desc":"448"},{"messageId":"443","fix":"531","desc":"445"},{"messageId":"446","fix":"532","desc":"448"},{"messageId":"443","fix":"533","desc":"445"},{"messageId":"446","fix":"534","desc":"448"},{"messageId":"443","fix":"535","desc":"445"},{"messageId":"446","fix":"536","desc":"448"},{"messageId":"443","fix":"537","desc":"445"},{"messageId":"446","fix":"538","desc":"448"},{"messageId":"443","fix":"539","desc":"445"},{"messageId":"446","fix":"540","desc":"448"},{"messageId":"443","fix":"541","desc":"445"},{"messageId":"446","fix":"542","desc":"448"},{"messageId":"443","fix":"543","desc":"445"},{"messageId":"446","fix":"544","desc":"448"},{"messageId":"443","fix":"545","desc":"445"},{"messageId":"446","fix":"546","desc":"448"},{"messageId":"443","fix":"547","desc":"445"},{"messageId":"446","fix":"548","desc":"448"},{"messageId":"443","fix":"549","desc":"445"},{"messageId":"446","fix":"550","desc":"448"},{"messageId":"443","fix":"551","desc":"445"},{"messageId":"446","fix":"552","desc":"448"},{"messageId":"443","fix":"553","desc":"445"},{"messageId":"446","fix":"554","desc":"448"},{"messageId":"443","fix":"555","desc":"445"},{"messageId":"446","fix":"556","desc":"448"},{"messageId":"443","fix":"557","desc":"445"},{"messageId":"446","fix":"558","desc":"448"},{"messageId":"443","fix":"559","desc":"445"},{"messageId":"446","fix":"560","desc":"448"},{"messageId":"443","fix":"561","desc":"445"},{"messageId":"446","fix":"562","desc":"448"},{"messageId":"443","fix":"563","desc":"445"},{"messageId":"446","fix":"564","desc":"448"},{"messageId":"443","fix":"565","desc":"445"},{"messageId":"446","fix":"566","desc":"448"},{"messageId":"443","fix":"567","desc":"445"},{"messageId":"446","fix":"568","desc":"448"},"suggestUnknown",{"range":"569","text":"570"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"569","text":"571"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"572","text":"570"},{"range":"572","text":"571"},{"range":"573","text":"570"},{"range":"573","text":"571"},{"range":"574","text":"570"},{"range":"574","text":"571"},{"range":"575","text":"570"},{"range":"575","text":"571"},{"range":"576","text":"570"},{"range":"576","text":"571"},{"range":"577","text":"570"},{"range":"577","text":"571"},{"range":"578","text":"570"},{"range":"578","text":"571"},{"range":"579","text":"570"},{"range":"579","text":"571"},{"range":"580","text":"570"},{"range":"580","text":"571"},{"range":"581","text":"570"},{"range":"581","text":"571"},{"range":"582","text":"570"},{"range":"582","text":"571"},{"range":"583","text":"570"},{"range":"583","text":"571"},{"range":"584","text":"570"},{"range":"584","text":"571"},{"range":"585","text":"570"},{"range":"585","text":"571"},{"range":"586","text":"570"},{"range":"586","text":"571"},{"range":"587","text":"570"},{"range":"587","text":"571"},{"range":"588","text":"570"},{"range":"588","text":"571"},{"range":"589","text":"570"},{"range":"589","text":"571"},{"range":"590","text":"570"},{"range":"590","text":"571"},{"range":"591","text":"570"},{"range":"591","text":"571"},{"range":"592","text":"570"},{"range":"592","text":"571"},{"range":"593","text":"570"},{"range":"593","text":"571"},{"range":"594","text":"570"},{"range":"594","text":"571"},{"range":"595","text":"570"},{"range":"595","text":"571"},{"range":"596","text":"570"},{"range":"596","text":"571"},{"range":"597","text":"570"},{"range":"597","text":"571"},{"range":"598","text":"570"},{"range":"598","text":"571"},{"range":"599","text":"570"},{"range":"599","text":"571"},{"range":"600","text":"570"},{"range":"600","text":"571"},{"range":"601","text":"570"},{"range":"601","text":"571"},{"range":"602","text":"570"},{"range":"602","text":"571"},{"range":"603","text":"570"},{"range":"603","text":"571"},{"range":"604","text":"570"},{"range":"604","text":"571"},{"range":"605","text":"570"},{"range":"605","text":"571"},{"range":"606","text":"570"},{"range":"606","text":"571"},{"range":"607","text":"570"},{"range":"607","text":"571"},"Update the dependencies array to be: [aspectState, cancelMyAspect, setMyAspect, transformDataByPointCrop, typeCrop]",{"range":"608","text":"609"},{"range":"610","text":"570"},{"range":"610","text":"571"},{"range":"611","text":"570"},{"range":"611","text":"571"},{"range":"612","text":"570"},{"range":"612","text":"571"},{"range":"613","text":"570"},{"range":"613","text":"571"},{"range":"614","text":"570"},{"range":"614","text":"571"},{"range":"615","text":"570"},{"range":"615","text":"571"},{"range":"616","text":"570"},{"range":"616","text":"571"},{"range":"617","text":"570"},{"range":"617","text":"571"},{"range":"618","text":"570"},{"range":"618","text":"571"},{"range":"619","text":"570"},{"range":"619","text":"571"},{"range":"620","text":"570"},{"range":"620","text":"571"},{"range":"621","text":"570"},{"range":"621","text":"571"},{"range":"622","text":"570"},{"range":"622","text":"571"},{"range":"623","text":"570"},{"range":"623","text":"571"},{"range":"624","text":"570"},{"range":"624","text":"571"},{"range":"625","text":"570"},{"range":"625","text":"571"},{"range":"626","text":"570"},{"range":"626","text":"571"},{"range":"627","text":"570"},{"range":"627","text":"571"},{"range":"628","text":"570"},{"range":"628","text":"571"},{"range":"629","text":"570"},{"range":"629","text":"571"},{"range":"630","text":"570"},{"range":"630","text":"571"},{"range":"631","text":"570"},{"range":"631","text":"571"},{"range":"632","text":"570"},{"range":"632","text":"571"},[168,171],"unknown","never",[195,198],[199,202],[1108,1111],[1372,1375],[1553,1556],[435,438],[1131,1134],[1480,1483],[1987,1990],[301,304],[618,621],[664,667],[874,877],[923,926],[1034,1037],[1093,1096],[1142,1145],[1189,1192],[1247,1250],[1303,1306],[1360,1363],[1503,1506],[1509,1512],[1809,1812],[2243,2246],[1629,1632],[442,445],[163,166],[353,356],[1094,1097],[301,304],[443,446],[519,522],[1044,1047],[1058,1061],[823,826],[1319,1342],"[aspectState, cancelMyAspect, setMyAspect, transformDataByPointCrop, typeCrop]",[1399,1402],[1445,1448],[1845,1848],[2035,2038],[2366,2369],[2800,2803],[3067,3070],[3538,3541],[3656,3659],[726,729],[772,775],[169,172],[357,360],[545,548],[3769,3772],[6142,6145],[590,593],[1183,1186],[1422,1425],[1611,1614],[1626,1629],[1642,1645],[117,120]]