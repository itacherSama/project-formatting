[{"D:\\progOther\\react\\test-work\\project-formatting\\src\\index.tsx":"1","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\FirstPage\\index.tsx":"2","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\DownloadBtn\\index.tsx":"3","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\ResizePage\\index.tsx":"4","D:\\progOther\\react\\test-work\\project-formatting\\src\\App.tsx":"5","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\index.tsx":"6","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\index.tsx":"7","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\event.ts":"8","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Gallery\\index.tsx":"9","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\DropzonePreview\\index.tsx":"10","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Thumb\\index.tsx":"11","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\store.ts":"12","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\CustomModal\\index.tsx":"13","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\SettingsImg\\index.tsx":"14","D:\\progOther\\react\\test-work\\project-formatting\\src\\utils\\differentFunc.ts":"15","D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\history.ts":"16","D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\router.tsx":"17","D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\Link.tsx":"18","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\imageService.ts":"19","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\fileService.ts":"20","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Buttons\\CloseButton\\index.tsx":"21","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\index.tsx":"22","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\WidthHeightFields\\index.tsx":"23","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\WidthHeightAspectFields\\index.tsx":"24","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\BlockImgPreview\\index.tsx":"25","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\localStorageService.ts":"26","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\base64Service.ts":"27","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\effect.ts":"28","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\MainPage\\index.tsx":"29","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\DownloadPage\\index.tsx":"30"},{"size":349,"mtime":1617163055151,"results":"31","hashOfConfig":"32"},{"size":927,"mtime":1616189971034,"results":"33","hashOfConfig":"32"},{"size":901,"mtime":1616190027526,"results":"34","hashOfConfig":"32"},{"size":3771,"mtime":1619274265871,"results":"35","hashOfConfig":"32"},{"size":260,"mtime":1616189786998,"results":"36","hashOfConfig":"32"},{"size":1070,"mtime":1616190024902,"results":"37","hashOfConfig":"32"},{"size":4390,"mtime":1617527178497,"results":"38","hashOfConfig":"32"},{"size":1308,"mtime":1616190009727,"results":"39","hashOfConfig":"32"},{"size":2430,"mtime":1616190020235,"results":"40","hashOfConfig":"32"},{"size":1021,"mtime":1616190022631,"results":"41","hashOfConfig":"32"},{"size":401,"mtime":1616190017633,"results":"42","hashOfConfig":"32"},{"size":5765,"mtime":1617454909673,"results":"43","hashOfConfig":"32"},{"size":672,"mtime":1617448676334,"results":"44","hashOfConfig":"32"},{"size":2652,"mtime":1616190018825,"results":"45","hashOfConfig":"32"},{"size":1093,"mtime":1616189567666,"results":"46","hashOfConfig":"32"},{"size":835,"mtime":1616190069528,"results":"47","hashOfConfig":"32"},{"size":652,"mtime":1616190077330,"results":"48","hashOfConfig":"32"},{"size":667,"mtime":1614358192309,"results":"49","hashOfConfig":"50"},{"size":4897,"mtime":1616190095904,"results":"51","hashOfConfig":"32"},{"size":991,"mtime":1616190090806,"results":"52","hashOfConfig":"32"},{"size":683,"mtime":1616190036221,"results":"53","hashOfConfig":"32"},{"size":1647,"mtime":1616190032739,"results":"54","hashOfConfig":"32"},{"size":852,"mtime":1617526795947,"results":"55","hashOfConfig":"32"},{"size":1053,"mtime":1616190049579,"results":"56","hashOfConfig":"32"},{"size":2759,"mtime":1617456418920,"results":"57","hashOfConfig":"32"},{"size":617,"mtime":1616190100244,"results":"58","hashOfConfig":"32"},{"size":1508,"mtime":1616190087996,"results":"59","hashOfConfig":"32"},{"size":1329,"mtime":1617453573480,"results":"60","hashOfConfig":"32"},{"size":3181,"mtime":1619274722256,"results":"61","hashOfConfig":"32"},{"size":451,"mtime":1616190002428,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"qdhen2",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"67"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"67"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"67"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},"13sf5w1",{"filePath":"107","messages":"108","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"67"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"67"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"67"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"67"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"67"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"D:\\progOther\\react\\test-work\\project-formatting\\src\\index.tsx",["139","140"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\FirstPage\\index.tsx",[],["141","142","143","144","145","146"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\DownloadBtn\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\ResizePage\\index.tsx",["147","148"],"import React from 'react';\nimport { useStore } from 'effector-react';\nimport Button from '@material-ui/core/Button';\nimport {\n  $images, $kitsImages, $idxKitImages, $modalState, $kitsImagesSetting\n} from '../../effector/store';\nimport {\n  setCurrentCropImage, setKitImages,\n  nextKitImages, previousKitImages, activeModal, disableModal, cancelCropImg, setPointImg, setKitImagesSettings\n} from '../../effector/event';\nimport Gallery from '../../components/Gallery';\nimport Crop from '../../components/Crop';\nimport CustomModal from '../../components/CustomModal';\nimport styles from './ResizePage.module.css';\nimport { IobjIdxKitImages, IobjImg, ISettingImg, ISettingsImage } from '../../interfaces/items';\nimport history from '../../router/history';\nimport BlockImgPreview from '../../components/BlockImgPreview';\nimport { convertFromBase64 } from '../../services/base64Service';\n\nconst ResizePage: React.FC<any> = ({ nextStep, backStep }) => {\n  const kitsImages = useStore($kitsImages);\n  const images: IobjImg[] = useStore($images);\n  const kitsImagesSetting: ISettingsImage[] = useStore($kitsImagesSetting);\n  const idxKitImages: IobjIdxKitImages = useStore($idxKitImages);\n  const currentIdxKitImages: number = idxKitImages.idx;\n  const currenKitImg: any = kitsImages[currentIdxKitImages];\n  const currentImg: IobjImg = images[currentIdxKitImages];\n  const currentImgSetting: ISettingsImage = kitsImagesSetting[currentIdxKitImages];\n  const modalState: boolean = useStore($modalState);\n\n  React.useEffect(() => {\n    setCurrentCropImage(kitsImages[currentIdxKitImages]);\n\n  }, [currentIdxKitImages]);\n\n  const addCropedImg = (base64Img: string, settingImg: ISettingImg) => {\n    convertFromBase64(base64Img, currenKitImg.length).then((fileImg: IobjImg) => {\n      setKitImagesSettings({\n        settingImg,\n        idx: currentIdxKitImages \n      });\n      setKitImages({ \n        kitImages: [...currenKitImg, fileImg],\n        idx: currentIdxKitImages });\n    });\n  };\n\n  const onPreviousImage = () => {\n    previousKitImages();\n  };\n\n  const onNextImage = () => {\n    // eslint-disable-next-line no-unused-expressions\n    currentIdxKitImages === idxKitImages.maxIdx ? nextStep() : nextKitImages();\n  };\n\n  const onActiveModal = () => {\n    activeModal();\n  };\n\n  const onCloseModal = () => {\n    disableModal();\n  };\n\n  if (!currentImg) {\n    history.navigate('/');\n    return null;\n  }\n\n  return (\n    <>\n      <BlockImgPreview\n        currentImg={ currentImg }\n        pointState={ currentImgSetting.point }\n        setPointState={ setPointImg }\n      />\n      \n      <div className={ styles.kitImages }>\n        <Gallery\n          files={ currenKitImg }\n          onActiveModal={ onActiveModal }\n          onCancelCropImg={ cancelCropImg }\n          settings={ currentImgSetting.items }\n        />\n      </div>\n      <CustomModal\n        onCloseModal={ onCloseModal }\n        open={ modalState }\n      >\n        <div className={ styles.crop }>\n          <Crop\n            addCropedImg={ addCropedImg }\n            onCloseModal={ onCloseModal }\n            point={ currentImgSetting.point }\n            src={ currentImg.preview! }\n          />\n        </div>\n      </CustomModal>\n\n      {\n        images.length > 0 && (\n          <div className={ styles.buttons }>\n        \n            <Button\n              color='primary'\n              onClick={ currentIdxKitImages === 0 ? backStep : onPreviousImage }\n              variant='contained'\n            >\n              Назад\n            </Button>\n            <Button\n              color='primary'\n              onClick={ onNextImage }\n              variant='contained'\n            >\n              Далее\n            </Button>\n          </div>\n        )\n      }\n    </>\n  );\n};\n\nexport default ResizePage;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\App.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\index.tsx",["149","150","151","152","153","154","155","156","157","158"],"import React from 'react';\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\nimport { useStore } from 'effector-react';\nimport CropForm from './CropForm';\nimport { $numberImg, $typeCrop } from '../../effector/store';\nimport { nextNumberImg } from '../../effector/event';\nimport { ICrop } from '../../interfaces/components';\nimport { ICropFormData, IImgCropValue } from '../../interfaces/items';\nimport { getPxFromPercent, getPercentFromPx , getPositionByPoint, calcAspect } from '../../services/imageService';\n\nconst typeCropWords = ['px', '%', 'aspect'];\n\nconst Crop: React.FC<ICrop> = ({ addCropedImg, src, onCloseModal, point }) => {  \n  const numberImg = useStore($numberImg);\n  const typeCrop = useStore($typeCrop);\n  const cropperRef = React.useRef<HTMLImageElement>(null);\n  const [cropData, setCropData] = React.useState<any>(null);\n  const [aspectState, setAspectState] = React.useState<ICropFormData>({\n    width: 4,\n    height: 3,\n  });\n\n  React.useEffect(() => {\n    const newAspect = calcAspect(aspectState.width as number, aspectState.height as number);\n    if (newAspect && typeCrop.current === typeCropWords[2]) {\n      setMyAspect(newAspect as number); \n      transformDataByPointCrop();\n    } else if (typeCrop.last === typeCropWords[2]) {\n      cancelMyAspect();\n    }\n    \n  }, [aspectState, typeCrop]);\n\n\n  const getCropper = () => {\n    const imageElement: any = cropperRef?.current;\n    const cropper: any = imageElement?.cropper;  \n\n    return cropper;\n  };\n\n  const getPercentCropData = () => {\n    if ( cropperRef.current && cropData.height && cropData.width) {\n      return getPercentFromPx(cropperRef.current!, { ...cropData });\n    }\n    return cropData;\n  };\n\n  const valueCrop = typeCrop.current === typeCropWords[1] ? getPercentCropData() : cropData;\n  \n  const onCrop = () => {\n    const cropper: any = getCropper();  \n    const newData = cropper.getData({ rounded: true });\n    \n    setCropData(newData);\n  };\n  \n  const transformDataByPointCrop = () => {\n    if (point) {\n      const cropper: any = getCropper();  \n      const imgSettings = cropper.getImageData();\n      const cropperData = cropper.getData({ rounded: true });\n      const getData = getPositionByPoint(cropperData, point, imgSettings);\n      cropper.setData({ ...getData });\n    }\n  };\n\n  const getCropImage = () => {\n    const cropper: any = getCropper();  \n    const cropperData = cropper.getData({ rounded: true });\n    const dataByImg = {\n      x: cropperData.x,\n      y: cropperData.y,\n      width: cropperData.width,\n      height: cropperData.height,\n    };\n    const base64Img = cropper.getCroppedCanvas().toDataURL();\n\n    addCropedImg(base64Img, dataByImg);\n    onCloseModal();\n  };\n\n  const setMyDataCrop = (objValue: IImgCropValue): void => {\n    const cropper: any = getCropper();  \n    const imgSettings = cropper.getImageData();\n    const typeValue = objValue.type;\n    const newValue = objValue.value;\n\n    if (newValue === '') {\n      setCropData({ ...cropData,\n        [typeValue]: newValue });\n      return;\n    }\n    \n    let newData : any = { \n      [typeValue]: parseInt(newValue)\n    };\n\n    if (typeCrop.current === typeCropWords[1]) {\n      newData = getPxFromPercent(cropperRef.current!, newData);\n    }\n\n    newData = {\n      ...cropData,\n      [typeValue]: newData[typeValue]\n    };\n  \n\n    if (point) {\n      newData = getPositionByPoint(newData, point, imgSettings);\n    }\n\n    cropper.setData({ ...newData });\n  };\n\n  const setMyAspect = (data: number): void => {\n    const cropper: any = getCropper();\n    cropper.setAspectRatio(data);\n  };\n\n  const cancelMyAspect = (): void => {\n    const cropper: any = getCropper();\n    cropper.setAspectRatio(NaN);\n\n  };\n\n  return (\n    <>\n      <Cropper\n        ref={ cropperRef }\n        autoCrop\n        autoCropArea={ 1 }\n        background={ false }\n        crop={ onCrop }\n        guides={ false }\n        ready={ () => {\n          transformDataByPointCrop();\n        } }\n        responsive\n        src={ src }\n        viewMode={ 1 }\n        zoomable={ false }\n      />\n      \n      <CropForm\n        aspect={ aspectState }\n        crop={ valueCrop }\n        getCropImage={ getCropImage }\n        onSetAspect={ setAspectState }\n        onSetCrop={ setMyDataCrop }\n        typeCrop={ typeCrop.current }\n        typeCropWords={ typeCropWords }\n      />\n    </>\n  );\n};\n\nexport default Crop;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\event.ts",["159","160","161","162","163","164","165","166","167","168","169"],"import { createEvent } from 'effector';\nimport { IobjImg } from '../interfaces/items';\n\nexport const setImages = createEvent<IobjImg[]>();\nexport const setCurrentCropImage = createEvent<IobjImg[]>();\nexport const setLengthKitsImages = createEvent<number>();\nexport const setKitImages = createEvent<any>();\nexport const nextKitImages = createEvent();\nexport const previousKitImages = createEvent();\nexport const setCurrentIdx = createEvent<number>();\nexport const activeModal = createEvent();\nexport const disableModal = createEvent();\nexport const nextNumberImg = createEvent();\nexport const setColor = createEvent<any>();\nexport const setQuality = createEvent<any>();\nexport const setIsCroppedImages = createEvent<boolean>();\nexport const cancelImg = createEvent<number>();\nexport const cancelCropImg = createEvent<number>();\nexport const setCancelCropImg = createEvent<any>();\nexport const setKitsImages = createEvent<any>();\nexport const setTypeCrop = createEvent<string>();\nexport const setImagesFromLocalStorage = createEvent<any>();\nexport const setSettingForKitsImages = createEvent<any>();\nexport const setkitsImages = createEvent<any>();\nexport const setPointImg = createEvent<any>();\nexport const setPointImgInKitImages = createEvent<any>();\nexport const setKitImagesSettings = createEvent<any>();\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Gallery\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Dropzone\\DropzonePreview\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Thumb\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\store.ts",["170","171","172","173","174","175","176"],"import { createStore, sample, guard, combine, restore, attach, merge } from 'effector';\nimport connectLocalStorage from 'effector-localstorage';\nimport * as events from './event';\nimport * as effects from './effect';\nimport { findNewCurrentIdx, deleteItemFromArrByIdx, setLengthKitsImagesFunc } from '../utils/differentFunc';\nimport { saveDataInLocalStorage } from '../services/localStorageService';\nimport { IobjIdxKitImages, IobjImg, ITypeCrop, IPointOnImg, ISettingsImage, ISettingsPointAndIdx } from '../interfaces/items';\n\n\nconst imagesLocalStorage = connectLocalStorage(\"images\")\n  .onError((err) => console.log(err));\n\nconst settingForKitsImagesLocalStorage = connectLocalStorage(\"settingForKitsImages\")\n  .onError((err) => console.log(err));  \n\nexport const $images = createStore<IobjImg[]>([])\n  .on([events.setImages, effects.fetchImagesFx.doneData], (state, images) =>  [...images])\n  .on(events.cancelImg, deleteItemFromArrByIdx);\n\nexport const $idxKitImages = createStore<IobjIdxKitImages>({ idx: 0, maxIdx: 0 })\n  .on(events.setCurrentIdx, (state, length) => ({\n    maxIdx: length - 1,\n    idx: 0,\n  }))\n  .on(events.nextKitImages, (state) => findNewCurrentIdx(state, '+'))\n  .on(events.previousKitImages, (state) => findNewCurrentIdx(state, '-'));\n\nexport const $kitsImages = createStore<IobjImg[][]>([])\n  .on(events.setLengthKitsImages, (state, length) => setLengthKitsImagesFunc(state, length, []))\n  .on(events.cancelImg, deleteItemFromArrByIdx)\n  .on([events.setKitImages, effects.generateKitImagesByPoint.doneData], (state, { kitImages, idx }) => {\n    if (kitImages.length === 0) {\n      return state;\n    }\n    const newState = [...state];\n    newState.splice(idx, 1, kitImages);\n\n    return newState;\n  })\n  .on(events.setCancelCropImg, (state, { idx, idxImg }) => {\n    const newState = [...state];\n    const kitImages = newState[idx];\n    kitImages.splice(idxImg, 1);\n    \n    return newState;\n  })\n  \n  .on(effects.generateKitsImages.doneData, (state, kitsImages) => {\n    let newState = [...state];\n    newState = newState.map((el, idx) => {\n      if (kitsImages[idx]) {\n        return kitsImages[idx];\n      }\n      return el;\n    });\n    return newState;\n  });\n\nexport const $kitsImagesSetting = createStore<any>([])\n  .on(events.setKitImagesSettings, (state, { settingImg, idx }) => {\n    const newState = [...state];\n    newState[idx].items.push(settingImg);\n    return newState;\n  })\n  .on(events.cancelImg, deleteItemFromArrByIdx)\n  .on(events.setPointImgInKitImages, (state, { pointOnImg, idx }) => {\n    const newState = [...state];\n    const objSettings = newState[idx];\n    objSettings.point = pointOnImg;\n    \n    return newState;\n  })\n  .on(events.setCancelCropImg, (state, { idx, idxImg }) => {\n    const newState = [...state];\n    const objSettings = newState[idx];\n    objSettings.items.splice(idxImg, 1);\n    \n    return newState;\n  })\n  .on(effects.fetchSettingsForImagesFx.doneData, (state, dataFromLocalStorage) => dataFromLocalStorage)\n  .on(events.setLengthKitsImages, ((state, length) => setLengthKitsImagesFunc(state, length, {\n    point: null,\n    items: []\n  })));\n\nsample({\n  source: $idxKitImages,\n  clock: events.cancelCropImg,\n  fn: (objIdxCurrentImg: IobjIdxKitImages, currentCropImgIdx: number) => ({ idx: objIdxCurrentImg.idx, idxImg: currentCropImgIdx }),\n  target: events.setCancelCropImg,\n});\n\nguard({\n  source: combine([restore(effects.fetchImagesFx, []), restore(effects.fetchSettingsForImagesFx, [])]),\n  filter: (storeComb: any): any => {\n    return storeComb[0].length && storeComb[1].length;\n  },\n  target: effects.generateKitsImages,\n});\n\nsample({\n  source: $idxKitImages,\n  clock: events.setPointImg,\n  fn: (objIdxCurrentImg: IobjIdxKitImages, pointOnImg: IPointOnImg) => ({ idx: objIdxCurrentImg.idx, pointOnImg }),\n  target: events.setPointImgInKitImages,\n});\n\n\nconst elementsForGenerateKitImagesByPoint = sample(combine([$idxKitImages, $images, $kitsImagesSetting]), events.setPointImg, \n  (arrayStores: any, pointOnImg: IPointOnImg) => {\n    const idx = arrayStores[0].idx;\n    return { \n      idx,\n      fileImage: arrayStores[1][idx], \n      kitImagesSetting: arrayStores[2][idx], \n      pointOnImg,\n    };\n  }\n);\n\nguard({\n  source: elementsForGenerateKitImagesByPoint,\n  filter: ({ pointOnImg }) => pointOnImg !== null,\n  target: effects.generateKitImagesByPoint,\n});\n\n$images.watch((state) => {\n  events.setLengthKitsImages(state.length);\n  events.setCurrentIdx(state.length);\n  \n  saveDataInLocalStorage('images', state, imagesLocalStorage);\n});\n\n$kitsImages.watch((state) => {\n  const hasImages = state.some((kit: any) => kit.length);\n  if (hasImages) {\n    events.setIsCroppedImages(hasImages);\n  }\n});\n\n$kitsImagesSetting.watch((state) => {\n  if (state.length === 0) {\n    return;\n  }\n  saveDataInLocalStorage('settingForKitsImages', state, settingForKitsImagesLocalStorage);\n\n});\n\nexport const $modalState = createStore<boolean>(false)\n  .on(events.activeModal, (state) => true)\n  .on(events.disableModal, (state) => false);\n\nexport const $numberImg = createStore<number>(0)\n  .on(events.nextNumberImg, (state) => state + 1);\n\nexport const $quality = createStore<string>('')\n  .on(events.setColor, (state, color) => color);\n\nexport const $color = createStore<string>('')\n  .on(events.setQuality, (state, quality) => quality);\n\nexport const $isCroppedImages = createStore<boolean>(false)\n  .on(events.setIsCroppedImages, (state, flag) => flag);\n\nexport const $typeCrop = createStore<ITypeCrop>({ current: 'px', last: null })\n  .on(events.setTypeCrop, (state, typeCrop) => {\n    return {\n      current: typeCrop,\n      last: state.current\n    };\n  });\n\n\neffects.fetchImagesFx(imagesLocalStorage.init([]));\neffects.fetchSettingsForImagesFx(settingForKitsImagesLocalStorage.init([]));\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\CustomModal\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\SettingsImg\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\utils\\differentFunc.ts",["177","178","179","180","181","182","183","184","185","186","187","188","189"],"import { IobjIdxKitImages } from '../interfaces/items';\n\nexport const findNewCurrentIdx = (state: IobjIdxKitImages, operation: string): IobjIdxKitImages => {\n  const newIdx = operation === '-' ? state.idx - 1 : state.idx + 1;\n\n  const hasIdx = (newIdx <= state.maxIdx) && newIdx > -1;\n  if (!hasIdx) {\n    return state;\n  }\n\n  return {\n    ...state,\n    idx: newIdx,\n  };\n};\n\nconst executeFuncIfNotArray = (item: any, func: (el: any) => any): any => {\n  if (Array.isArray(item)) {\n    return item.map((el: any) => {\n      return executeFuncIfNotArray(el, func);\n    });\n  } else {\n    return func(item);\n  }\n};\n\nexport const deleteItemFromArrByIdx = (state: any, idx: number) => {\n  const newState = [...state];\n  newState.splice(idx, 1);\n  return newState;\n};\n\nexport const setLengthKitsImagesFunc = (state: any, length: number, newItem: any) => {\n  const newState = [...state];\n  if (length > state.length) {\n    const needIncreaseLength = length - state.length;\n    const newItems = new Array(needIncreaseLength).fill(newItem);\n    \n    newState.push(...newItems);\n  }\n  return newState;\n};","D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\history.ts",["190","191","192","193","194"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\router.tsx",["195"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\router\\Link.tsx",["196"],"// eslint-disable-next-line import/no-cycle\r\nimport React from 'react';\r\nimport { basename } from './router';\r\nimport history from './history';\r\nimport { IMyLink } from '../interfaces/items';\r\n\r\nfunction noOp(){}\r\n\r\nconst createOnClickAnchor = (callback: any) => {\r\n  return (e: React.MouseEvent<HTMLAnchorElement>) => {\r\n    e.preventDefault();\r\n    history.navigate(e.currentTarget.getAttribute('href'));\r\n    callback(e);\r\n  };\r\n};\r\n\r\nexport default ({ href, onClick = noOp, children, ...rest }: IMyLink ): React.ReactElement => (\r\n  <a\r\n    href={ basename + href }\r\n    onClick={ createOnClickAnchor(onClick) }\r\n    { ...rest }\r\n  >\r\n    { children }\r\n  </a>\r\n);",["197","198","199","200","201","202"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\imageService.ts",["203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218"],"import { ICropFormData, IPointOnImg, IImgSettingsNaturalSize, ISettingImg, IobjImg, ISettingsImage } from '../interfaces/items';\n\nexport const getImgFromPreviewFile = (preview: string): Promise<HTMLImageElement> => {\n  return new Promise(function(resolve, reject) {\n    const img: HTMLImageElement = new Image();\n    img.onload = function() {\n      resolve(img);\n    };\n    img.src = preview;\n  });\n};\n\nexport const calcProportion = (firstArg: number, necessarySize: number, secondArg: number): number => {\n  const propotion: number = Math.round(firstArg * (necessarySize / secondArg));\n  return propotion;\n};\n\nexport const getTypeByPropotion = (proportionWidth: number, proportionHeight: number, types: string[]): string => {\n  if ((proportionWidth / proportionHeight) > 1) {\n    return types[0];\n  } else {\n    return types[1];\n  }\n};\n\nexport const calcPxFromPercent = (naturalSize: number, val: any): number => {\n  const pixelVal = Math.round(naturalSize * (val / 100));\n  return pixelVal;\n};\n\nexport const calcPercentFromPx = (naturalSize: number, val: any): number => {\n  const percentVal =  Math.round((val / naturalSize) * 100);\n  return percentVal;\n};\n\nexport const getPxFromPercent = (image: HTMLImageElement, objCrop: any) => {\n  objCrop.width = calcPxFromPercent(image.naturalWidth, objCrop.width);\n  objCrop.height = calcPxFromPercent(image.naturalHeight, objCrop.height);\n    \n  return objCrop;\n};\n\nexport const getPercentFromPx = (image: HTMLImageElement, objCrop: any) => {\n  objCrop.width = calcPercentFromPx(image.naturalWidth, objCrop.width);\n  objCrop.height = calcPercentFromPx(image.naturalHeight, objCrop.height);\n\n  return objCrop;\n};\n\nexport const calcAspect = ( width: number, height: number): number | boolean => {\n  if (height <= 0 || width <= 0) {\n    return false;\n  }\n  const aspect = width / height;\n  return aspect;\n};\n\nexport const generateImagesBySettings = async (img: HTMLImageElement, settings: ISettingImg): Promise<any> => {\n  const canvas = document.createElement('canvas');\n  canvas.width = settings.width;\n  canvas.height = settings.height;\n\n  const context = canvas.getContext(\"2d\");\n\n  context!.drawImage(\n    img, \n    settings.x, \n    settings.y, \n    settings.width, \n    settings.height, \n    0,\n    0,\n    settings.width,\n    settings.height\n  );\n  \n  return new Promise((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      resolve(blob);\n    }, 'image/jpeg', 1);\n  });\n};\n\nexport const getPositionByPoint = (data: ICropFormData, point: IPointOnImg, imgSettings: IImgSettingsNaturalSize) => {\n  const pointFromPx = { \n    x: calcPxFromPercent(imgSettings.naturalWidth, point.x),\n    y: calcPxFromPercent(imgSettings.naturalHeight, point.y) \n  };\n  const halfWidth = data.width / 2;\n  const halfHeight = data.height / 2;\n  const newLeft = pointFromPx.x - halfWidth;\n  const newTop = pointFromPx.y - halfHeight;\n\n  return {\n    ...data,\n    x: newLeft >= 0 ? newLeft : 0,\n    y: newTop >= 0 ? newTop : 0,\n  };\n};\n\nexport const getPositionByPointDouble = (data: ICropFormData, point: IPointOnImg, imgSettings: IImgSettingsNaturalSize) => {\n  const pointFromPx = { \n    x: calcPxFromPercent(imgSettings.naturalWidth, point.x),\n    y: calcPxFromPercent(imgSettings.naturalHeight, point.y) \n  };\n  const halfWidth = data.width / 2;\n  const halfHeight = data.height / 2;\n\n  let newPoints: any = {\n    newLeft : pointFromPx.x - halfWidth,\n    newTop : pointFromPx.y - halfHeight,\n    newRight : pointFromPx.x + halfWidth,\n    newBot : pointFromPx.y + halfHeight,\n  };\n\n  if (imgSettings.naturalWidth < newPoints.newRight ) {\n    const needPxW = newPoints.newRight - imgSettings.naturalWidth;\n    const newRight = newPoints.newRight - needPxW;\n    const newLeft = newPoints.newLeft - needPxW;\n    newPoints = {\n      ...newPoints, \n      newRight, newLeft\n    };\n  }\n\n  if ( imgSettings.naturalHeight < newPoints.newBot ) {\n    const needPxH =  newPoints.newBot - imgSettings.naturalHeight;\n    const newBot = newPoints.newBot - needPxH;\n    const newTop = newPoints.newTop - needPxH;\n    newPoints = {\n      ...newPoints, \n      newBot, newTop\n    };\n  }\n  \n  return {\n    ...data,\n    x: newPoints.newLeft >= 0 ? newPoints.newLeft : 0,\n    y: newPoints.newTop >= 0 ? newPoints.newTop : 0,\n  };\n};\n\n\nexport const generateKitImages = async (imgElement: HTMLImageElement, kitSettings: ISettingsImage, newPoint?: IPointOnImg): Promise<IobjImg[]> => {\n  const kitImages: IobjImg[] = [];\n  for (let idxEl = 0; idxEl < kitSettings.items.length; idxEl++) {\n    let settings = kitSettings.items[idxEl];\n    if (newPoint) {\n      settings = getPositionByPointDouble(settings, newPoint, imgElement);\n    }\n    const blobImg: Blob = await generateImagesBySettings(imgElement, settings);\n    const fileImg: IobjImg = new File([blobImg], `${idxEl}.jpg`);\n    fileImg.preview = URL.createObjectURL(fileImg);\n\n    kitImages.push(fileImg);\n  }\n  return kitImages;\n};","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\fileService.ts",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Buttons\\CloseButton\\index.tsx",[],"D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\index.tsx",["219"],"import React from 'react';\nimport Button from '@material-ui/core/Button'; \nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport styles from '../Crop.module.css'; \nimport { setTypeCrop } from '../../../effector/event';\nimport WidthHeightFields from './WidthHeightFields';\nimport WidthHeightAspectFields from './WidthHeightAspectFields';\n\nimport { ICropForm } from '../../../interfaces/components';\n\nconst CropForm: React.FC<ICropForm> = ({ onSetCrop, crop, aspect, onSetAspect, typeCrop, typeCropWords, getCropImage }) => {\n\n  const onChangeTypeCrop = (event: React.ChangeEvent<any>) => {\n    const newTypeCrop = event.target.value;\n    setTypeCrop(newTypeCrop);\n  };\n  \n  return (\n    <form\n      autoComplete='off'\n      className={ styles.cropForm }\n      noValidate\n    >\n      { typeCrop !== typeCropWords[2] ? (\n        <WidthHeightFields\n          crop={ crop }\n          onSetCrop={ onSetCrop }\n        />\n      ) : (\n        <WidthHeightAspectFields\n          aspect={ aspect }\n          onSetAspect={ onSetAspect }\n        />\n      ) }\n      <Select\n        onChange={ onChangeTypeCrop }\n        value={ typeCrop }\n      >\n        {\n          typeCropWords.map((word: string, idx: number) => {\n\n            return (\n              <MenuItem\n                key={ `${word}_${idx}` }\n                value={ word }\n              >\n                { word }\n              </MenuItem>\n            );\n          })\n        }\n      </Select>\n      <Button\n        color='primary'\n        onClick={ getCropImage }\n      >\n        Save\n      </Button>\n    </form>\n  );\n};\n\nexport default CropForm;","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\WidthHeightFields\\index.tsx",["220"],"import React, { FC, ChangeEvent } from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst WidthHeightFields:FC<any> = ({ crop, onSetCrop }) => {\n\n  const setCropHeight = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target;\n    onSetCrop({ type: 'height', value });\n  };\n\n  const setCropWidth = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target;\n    onSetCrop({ type: 'width', value });\n  };\n\n  if (!crop) return <div />;\n\n  return (\n    <>\n      <TextField\n        label='Width'\n        onChange={ setCropWidth }\n        type='number'\n        value={ crop.width }\n      />\n      <TextField\n        label='Height'\n        onChange={ setCropHeight }\n        type='number'\n        value={ crop.height }\n      />\n    </>\n  );\n};\n\nexport default WidthHeightFields;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\Crop\\CropForm\\WidthHeightAspectFields\\index.tsx",["221","222","223"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nconst WidthHeightAspectFields:React.FC<any> = ({ onSetAspect, aspect }) => {\n  const onChangeAspectWidth =  (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target;\n    const width = value;\n    onSetAspect((prevState: any) => {\n      return {\n        ...prevState,\n        width\n      };\n    });\n  };\n\n  const onChangeAspectHeight = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    const { value } = event.target;\n    const height = value;\n    onSetAspect((prevState: any) => {\n      return {\n        ...prevState,\n        height\n      };\n    });\n  };\n\n  return (\n    <>\n      <TextField\n        label='Width'\n        onChange={ onChangeAspectWidth }\n        type='number'\n        value={ aspect.width }\n      />\n      <TextField\n        label='Height'\n        onChange={ onChangeAspectHeight }\n        type='number'\n        value={ aspect.height }\n      />\n    \n    </>\n  );\n};\n\nexport default WidthHeightAspectFields;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\components\\BlockImgPreview\\index.tsx",["224","225","226","227"],"import React, { MouseEvent, FC, useEffect, useLayoutEffect, useRef } from \"react\";\nimport styles from './BlockImgPreview.module.css';\nimport { calcPercentFromPx, calcPxFromPercent } from '../../services/imageService';\n\nconst touchduration = 1000;\n\nconst BlockImgPreview: FC<any> = ({ currentImg, pointState, setPointState }) => {\n  const canvasPreview: any = useRef(null);\n  const ImgPreview: any = useRef(null);\n  let timer: number;\n  useEffect(() => {\n    resize();\n    \n  }, [currentImg]);\n\n  useEffect(() => {\n    draw();\n  }, [pointState]);\n\n  const resize = () => {\n    const canvas = canvasPreview.current;\n    const cs = getComputedStyle(ImgPreview.current);\n    const width = parseInt(cs.getPropertyValue('width'), 10);\n    const height = parseInt(cs.getPropertyValue('height'), 10);\n    canvas.width = width;\n    canvas.height = height;\n\n    draw();\n  };\n\n  useLayoutEffect(() => {\n    window.addEventListener('resize', resize);\n    return () => {\n      window.removeEventListener('resize', resize);\n    };\n  }, [pointState]);\n\n\n  const calcWithFunc = (x: number, y: number, func: any) => {\n    const canvas = canvasPreview.current;\n    const xPercent = func(canvas.width, x);\n    const yPercent = func(canvas.height, y);\n    return {\n      x: xPercent,\n      y: yPercent\n    };\n  };\n\n  const draw = (): void => {\n    const canvas: HTMLCanvasElement = canvasPreview.current;\n    const ctx: CanvasRenderingContext2D = canvas.getContext(\"2d\")!; \n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (pointState) {\n      const pointValue = calcWithFunc(pointState.x, pointState.y, calcPxFromPercent);\n      ctx.fillStyle = 'red';\n      ctx.beginPath();\n      ctx.arc(pointValue.x, pointValue.y, 3, 0, 2 * Math.PI, true);\n      \n      ctx.fill();\n    }\n    \n   \n  };\n\n  const setPoint = (e: MouseEvent<HTMLCanvasElement>): void => {\n    const x = e.nativeEvent.offsetX;\n    const y = e.nativeEvent.offsetY;\n    const percentPoint = calcWithFunc(x, y, calcPercentFromPx);\n    \n    setPointState(percentPoint);\n  };\n\n  const cancelPoint = (e: MouseEvent): void => {\n    if (e) {\n      e.preventDefault();\n    }\n    setPointState(null);\n  };\n  \n  const handleTouchStart = (): void => {\n    \n    timer = setTimeout(cancelPoint, touchduration); \n  };\n\n  const handleTouchEnd = (): void => {\n    if (timer)\n      clearTimeout(timer);\n  };\n\n  return (\n    <div className={ styles.blockImgPreview }>\n      <img\n        ref={ ImgPreview }\n        alt=\"main\"\n        src={ currentImg.preview }\n      />\n      <canvas\n        ref={ canvasPreview }\n        onClick={ setPoint }\n        onContextMenu={ cancelPoint }\n        onTouchEnd={ handleTouchEnd }\n        onTouchStart={ handleTouchStart }\n      />\n    </div>\n  );\n};\n\nexport default BlockImgPreview;\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\localStorageService.ts",["228","229","230","231","232"],"import { convertFilesInBase64Items } from './base64Service';\n\nconst nameItems = ['images', 'settingForKitsImages'];\n\nexport const saveDataInLocalStorage = (localName: string, data: any, saveFunc: any): void => {\n  if (localName === nameItems[0]) {\n    const convertedDataToBase64 = convertFilesInBase64Items(data);\n    convertedDataToBase64.then((results: string[]) => {\n      saveFunc(results);\n    }\n    );\n  } else {\n    saveFunc(data);\n\n  }\n\n};\n\nconst saveData = (localName: string, data: any) => {\n  const convertedDataToString = JSON.stringify(data);\n  localStorage.setItem(localName, convertedDataToString);\n};","D:\\progOther\\react\\test-work\\project-formatting\\src\\services\\base64Service.ts",["233","234","235","236","237","238","239","240","241","242","243","244","245","246","247"],"import { IobjImg } from '../interfaces/items';\n\nexport const convertFromBase64 = (el: any, idx: number) => {\n  return fetch(el)\n    .then((res) => res.blob())\n    .then((blob) => {\n      const file = new File([blob], `${idx.toString()}.jpg`, { type: 'image/jpg' });\n      const newFile = Object.assign(file, {\n        preview: URL.createObjectURL(file),\n      });\n\n      return newFile;\n    });\n};\n\nexport const toBase64 = (file: any) => new Promise((resolve, reject) => {  \n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = (error) => reject(error);\n});\n\nexport const convertBase64ItemsInFiles = (items: string[],) => {\n  const promiseArr = items.map((el: any, idx: number) => {\n    return convertFromBase64(el, idx);\n  });\n\n  const arrItems: any[] = [];\n\n  return Promise.allSettled(promiseArr).then((results: any) => {\n    // console.log('promise res', results);\n    \n    results.forEach((result: any) => {\n    // console.log('promise item', result);\n\n      arrItems.push(result.value);\n    });\n    \n    return arrItems;\n  });\n};\n\nexport const convertFilesInBase64Items = (items: IobjImg[]): Promise<string[]> => {\n  const promiseArr = items.map((el: any) => {\n    return toBase64(el);\n  });\n\n  const arrItems: any[] = [];\n\n  return Promise.allSettled(promiseArr).then((results: any) => {\n    results.forEach((result: any) => {\n      arrItems.push(result.value);\n    });\n    \n    return Promise.resolve(arrItems);\n  });\n};\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\effector\\effect.ts",["248","249","250","251","252"],"import { createEffect } from 'effector';\nimport { convertBase64ItemsInFiles } from '../services/base64Service';\nimport { getImgFromPreviewFile, generateKitImages } from '../services/imageService';\nimport { IobjImg } from '../interfaces/items';\n\nexport const fetchImagesFx = createEffect(async (data: any) => {\n  const req = await convertBase64ItemsInFiles(data);\n  return req;\n});\n\nexport const fetchSettingsForImagesFx = createEffect((data: any) => data);\n\nexport const generateKitsImages = createEffect(async (data: any): Promise<IobjImg[][]>  => {\n  const [images, settingsForKits] = data;\n  const kitsImages = [];\n  for (let idx = 0; idx < settingsForKits.length; idx++) {\n    const imageKitsettings = settingsForKits[idx];\n    const currentImg = images[idx];\n    const imgElement = await getImgFromPreviewFile(currentImg.preview);\n    const kitImages = await generateKitImages(imgElement, imageKitsettings);\n\n    kitsImages.push(kitImages);\n  }\n\n  return kitsImages;\n  \n});\n\nexport const generateKitImagesByPoint = createEffect(async (data: any): Promise<any> => {\n  const { fileImage, kitImagesSetting, pointOnImg, idx } = data;\n  \n  const imgElement = await getImgFromPreviewFile(fileImage.preview);\n  const kitImages = await generateKitImages(imgElement, kitImagesSetting, pointOnImg);\n\n  return { kitImages, idx };\n});\n\n","D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\MainPage\\index.tsx",["253","254","255","256"],"D:\\progOther\\react\\test-work\\project-formatting\\src\\pages\\DownloadPage\\index.tsx",[],{"ruleId":"257","severity":1,"message":"258","line":7,"column":33,"nodeType":"259","messageId":"260","endLine":7,"endColumn":36,"suggestions":"261"},{"ruleId":"257","severity":1,"message":"258","line":8,"column":18,"nodeType":"259","messageId":"260","endLine":8,"endColumn":21,"suggestions":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"257","severity":1,"message":"258","line":20,"column":28,"nodeType":"259","messageId":"260","endLine":20,"endColumn":31,"suggestions":"275"},{"ruleId":"257","severity":1,"message":"258","line":26,"column":23,"nodeType":"259","messageId":"260","endLine":26,"endColumn":26,"suggestions":"276"},{"ruleId":"257","severity":1,"message":"258","line":19,"column":50,"nodeType":"259","messageId":"260","endLine":19,"endColumn":53,"suggestions":"277"},{"ruleId":"257","severity":1,"message":"258","line":38,"column":25,"nodeType":"259","messageId":"260","endLine":38,"endColumn":28,"suggestions":"278"},{"ruleId":"257","severity":1,"message":"258","line":39,"column":20,"nodeType":"259","messageId":"260","endLine":39,"endColumn":23,"suggestions":"279"},{"ruleId":"257","severity":1,"message":"258","line":54,"column":20,"nodeType":"259","messageId":"260","endLine":54,"endColumn":23,"suggestions":"280"},{"ruleId":"257","severity":1,"message":"258","line":62,"column":22,"nodeType":"259","messageId":"260","endLine":62,"endColumn":25,"suggestions":"281"},{"ruleId":"257","severity":1,"message":"258","line":71,"column":20,"nodeType":"259","messageId":"260","endLine":71,"endColumn":23,"suggestions":"282"},{"ruleId":"257","severity":1,"message":"258","line":86,"column":20,"nodeType":"259","messageId":"260","endLine":86,"endColumn":23,"suggestions":"283"},{"ruleId":"257","severity":1,"message":"258","line":97,"column":19,"nodeType":"259","messageId":"260","endLine":97,"endColumn":22,"suggestions":"284"},{"ruleId":"257","severity":1,"message":"258","line":119,"column":20,"nodeType":"259","messageId":"260","endLine":119,"endColumn":23,"suggestions":"285"},{"ruleId":"257","severity":1,"message":"258","line":124,"column":20,"nodeType":"259","messageId":"260","endLine":124,"endColumn":23,"suggestions":"286"},{"ruleId":"257","severity":1,"message":"258","line":7,"column":41,"nodeType":"259","messageId":"260","endLine":7,"endColumn":44,"suggestions":"287"},{"ruleId":"257","severity":1,"message":"258","line":14,"column":37,"nodeType":"259","messageId":"260","endLine":14,"endColumn":40,"suggestions":"288"},{"ruleId":"257","severity":1,"message":"258","line":15,"column":39,"nodeType":"259","messageId":"260","endLine":15,"endColumn":42,"suggestions":"289"},{"ruleId":"257","severity":1,"message":"258","line":19,"column":45,"nodeType":"259","messageId":"260","endLine":19,"endColumn":48,"suggestions":"290"},{"ruleId":"257","severity":1,"message":"258","line":20,"column":42,"nodeType":"259","messageId":"260","endLine":20,"endColumn":45,"suggestions":"291"},{"ruleId":"257","severity":1,"message":"258","line":22,"column":54,"nodeType":"259","messageId":"260","endLine":22,"endColumn":57,"suggestions":"292"},{"ruleId":"257","severity":1,"message":"258","line":23,"column":52,"nodeType":"259","messageId":"260","endLine":23,"endColumn":55,"suggestions":"293"},{"ruleId":"257","severity":1,"message":"258","line":24,"column":42,"nodeType":"259","messageId":"260","endLine":24,"endColumn":45,"suggestions":"294"},{"ruleId":"257","severity":1,"message":"258","line":25,"column":40,"nodeType":"259","messageId":"260","endLine":25,"endColumn":43,"suggestions":"295"},{"ruleId":"257","severity":1,"message":"258","line":26,"column":51,"nodeType":"259","messageId":"260","endLine":26,"endColumn":54,"suggestions":"296"},{"ruleId":"257","severity":1,"message":"258","line":27,"column":49,"nodeType":"259","messageId":"260","endLine":27,"endColumn":52,"suggestions":"297"},{"ruleId":"298","severity":1,"message":"299","line":11,"column":21,"nodeType":"300","messageId":"301","endLine":11,"endColumn":32},{"ruleId":"298","severity":1,"message":"299","line":14,"column":21,"nodeType":"300","messageId":"301","endLine":14,"endColumn":32},{"ruleId":"257","severity":1,"message":"258","line":59,"column":47,"nodeType":"259","messageId":"260","endLine":59,"endColumn":50,"suggestions":"302"},{"ruleId":"257","severity":1,"message":"258","line":95,"column":23,"nodeType":"259","messageId":"260","endLine":95,"endColumn":26,"suggestions":"303"},{"ruleId":"257","severity":1,"message":"258","line":95,"column":29,"nodeType":"259","messageId":"260","endLine":95,"endColumn":32,"suggestions":"304"},{"ruleId":"257","severity":1,"message":"258","line":110,"column":17,"nodeType":"259","messageId":"260","endLine":110,"endColumn":20,"suggestions":"305"},{"ruleId":"257","severity":1,"message":"258","line":135,"column":38,"nodeType":"259","messageId":"260","endLine":135,"endColumn":41,"suggestions":"306"},{"ruleId":"257","severity":1,"message":"258","line":17,"column":38,"nodeType":"259","messageId":"260","endLine":17,"endColumn":41,"suggestions":"307"},{"ruleId":"257","severity":1,"message":"258","line":17,"column":54,"nodeType":"259","messageId":"260","endLine":17,"endColumn":57,"suggestions":"308"},{"ruleId":"257","severity":1,"message":"258","line":17,"column":62,"nodeType":"259","messageId":"260","endLine":17,"endColumn":65,"suggestions":"309"},{"ruleId":"257","severity":1,"message":"258","line":17,"column":68,"nodeType":"259","messageId":"260","endLine":17,"endColumn":71,"suggestions":"310"},{"ruleId":"257","severity":1,"message":"258","line":19,"column":26,"nodeType":"259","messageId":"260","endLine":19,"endColumn":29,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":27,"column":39,"nodeType":"314","messageId":"315","endLine":27,"endColumn":67},{"ruleId":"312","severity":1,"message":"316","line":27,"column":40,"nodeType":"317","messageId":"318","endLine":27,"endColumn":50},{"ruleId":"257","severity":1,"message":"258","line":27,"column":47,"nodeType":"259","messageId":"260","endLine":27,"endColumn":50,"suggestions":"319"},{"ruleId":"312","severity":1,"message":"313","line":33,"column":40,"nodeType":"314","messageId":"315","endLine":33,"endColumn":85},{"ruleId":"312","severity":1,"message":"316","line":33,"column":41,"nodeType":"317","messageId":"318","endLine":33,"endColumn":51},{"ruleId":"257","severity":1,"message":"258","line":33,"column":48,"nodeType":"259","messageId":"260","endLine":33,"endColumn":51,"suggestions":"320"},{"ruleId":"312","severity":1,"message":"321","line":33,"column":69,"nodeType":"317","messageId":"318","endLine":33,"endColumn":81},{"ruleId":"257","severity":1,"message":"258","line":33,"column":78,"nodeType":"259","messageId":"260","endLine":33,"endColumn":81,"suggestions":"322"},{"ruleId":"257","severity":1,"message":"258","line":6,"column":14,"nodeType":"259","messageId":"260","endLine":6,"endColumn":17,"suggestions":"323"},{"ruleId":"324","severity":1,"message":"325","line":10,"column":22,"nodeType":"326","messageId":"327","endLine":10,"endColumn":31},{"ruleId":"257","severity":1,"message":"258","line":10,"column":38,"nodeType":"259","messageId":"260","endLine":10,"endColumn":41,"suggestions":"328"},{"ruleId":"257","severity":1,"message":"258","line":10,"column":50,"nodeType":"259","messageId":"260","endLine":10,"endColumn":53,"suggestions":"329"},{"ruleId":"324","severity":1,"message":"325","line":25,"column":22,"nodeType":"326","messageId":"327","endLine":25,"endColumn":31},{"ruleId":"257","severity":1,"message":"258","line":9,"column":30,"nodeType":"259","messageId":"260","endLine":9,"endColumn":33,"suggestions":"330"},{"ruleId":"257","severity":1,"message":"258","line":9,"column":40,"nodeType":"259","messageId":"260","endLine":9,"endColumn":43,"suggestions":"331"},{"ruleId":"263","replacedBy":"332"},{"ruleId":"265","replacedBy":"333"},{"ruleId":"267","replacedBy":"334"},{"ruleId":"269","replacedBy":"335"},{"ruleId":"271","replacedBy":"336"},{"ruleId":"273","replacedBy":"337"},{"ruleId":"324","severity":1,"message":"325","line":4,"column":22,"nodeType":"326","messageId":"327","endLine":4,"endColumn":30},{"ruleId":"324","severity":1,"message":"325","line":6,"column":18,"nodeType":"326","messageId":"327","endLine":6,"endColumn":26},{"ruleId":"312","severity":1,"message":"338","line":26,"column":56,"nodeType":"317","messageId":"318","endLine":26,"endColumn":64},{"ruleId":"257","severity":1,"message":"258","line":26,"column":61,"nodeType":"259","messageId":"260","endLine":26,"endColumn":64,"suggestions":"339"},{"ruleId":"312","severity":1,"message":"338","line":31,"column":56,"nodeType":"317","messageId":"318","endLine":31,"endColumn":64},{"ruleId":"257","severity":1,"message":"258","line":31,"column":61,"nodeType":"259","messageId":"260","endLine":31,"endColumn":64,"suggestions":"340"},{"ruleId":"312","severity":1,"message":"313","line":36,"column":33,"nodeType":"314","messageId":"315","endLine":36,"endColumn":75},{"ruleId":"312","severity":1,"message":"341","line":36,"column":59,"nodeType":"317","messageId":"318","endLine":36,"endColumn":71},{"ruleId":"257","severity":1,"message":"258","line":36,"column":68,"nodeType":"259","messageId":"260","endLine":36,"endColumn":71,"suggestions":"342"},{"ruleId":"312","severity":1,"message":"313","line":43,"column":33,"nodeType":"314","messageId":"315","endLine":43,"endColumn":75},{"ruleId":"312","severity":1,"message":"341","line":43,"column":59,"nodeType":"317","messageId":"318","endLine":43,"endColumn":71},{"ruleId":"257","severity":1,"message":"258","line":43,"column":68,"nodeType":"259","messageId":"260","endLine":43,"endColumn":71,"suggestions":"343"},{"ruleId":"257","severity":1,"message":"258","line":58,"column":103,"nodeType":"259","messageId":"260","endLine":58,"endColumn":106,"suggestions":"344"},{"ruleId":"312","severity":1,"message":"313","line":84,"column":35,"nodeType":"314","messageId":"315","endLine":84,"endColumn":117},{"ruleId":"312","severity":1,"message":"313","line":101,"column":41,"nodeType":"314","messageId":"315","endLine":101,"endColumn":123},{"ruleId":"257","severity":1,"message":"258","line":109,"column":18,"nodeType":"259","messageId":"260","endLine":109,"endColumn":21,"suggestions":"345"},{"ruleId":"257","severity":1,"message":"258","line":14,"column":54,"nodeType":"259","messageId":"260","endLine":14,"endColumn":57,"suggestions":"346"},{"ruleId":"257","severity":1,"message":"258","line":4,"column":28,"nodeType":"259","messageId":"260","endLine":4,"endColumn":31,"suggestions":"347"},{"ruleId":"257","severity":1,"message":"258","line":4,"column":40,"nodeType":"259","messageId":"260","endLine":4,"endColumn":43,"suggestions":"348"},{"ruleId":"257","severity":1,"message":"258","line":8,"column":29,"nodeType":"259","messageId":"260","endLine":8,"endColumn":32,"suggestions":"349"},{"ruleId":"257","severity":1,"message":"258","line":19,"column":29,"nodeType":"259","messageId":"260","endLine":19,"endColumn":32,"suggestions":"350"},{"ruleId":"257","severity":1,"message":"258","line":7,"column":27,"nodeType":"259","messageId":"260","endLine":7,"endColumn":30,"suggestions":"351"},{"ruleId":"257","severity":1,"message":"258","line":8,"column":24,"nodeType":"259","messageId":"260","endLine":8,"endColumn":27,"suggestions":"352"},{"ruleId":"257","severity":1,"message":"258","line":9,"column":21,"nodeType":"259","messageId":"260","endLine":9,"endColumn":24,"suggestions":"353"},{"ruleId":"257","severity":1,"message":"258","line":39,"column":53,"nodeType":"259","messageId":"260","endLine":39,"endColumn":56,"suggestions":"354"},{"ruleId":"312","severity":1,"message":"355","line":5,"column":59,"nodeType":"317","messageId":"318","endLine":5,"endColumn":68},{"ruleId":"257","severity":1,"message":"258","line":5,"column":65,"nodeType":"259","messageId":"260","endLine":5,"endColumn":68,"suggestions":"356"},{"ruleId":"312","severity":1,"message":"357","line":5,"column":70,"nodeType":"317","messageId":"318","endLine":5,"endColumn":83},{"ruleId":"257","severity":1,"message":"258","line":5,"column":80,"nodeType":"259","messageId":"260","endLine":5,"endColumn":83,"suggestions":"358"},{"ruleId":"257","severity":1,"message":"258","line":19,"column":44,"nodeType":"259","messageId":"260","endLine":19,"endColumn":47,"suggestions":"359"},{"ruleId":"312","severity":1,"message":"313","line":3,"column":34,"nodeType":"314","messageId":"315","endLine":3,"endColumn":59},{"ruleId":"312","severity":1,"message":"360","line":3,"column":35,"nodeType":"317","messageId":"318","endLine":3,"endColumn":42},{"ruleId":"257","severity":1,"message":"258","line":3,"column":39,"nodeType":"259","messageId":"260","endLine":3,"endColumn":42,"suggestions":"361"},{"ruleId":"312","severity":1,"message":"313","line":16,"column":25,"nodeType":"314","messageId":"315","endLine":16,"endColumn":39},{"ruleId":"312","severity":1,"message":"362","line":16,"column":26,"nodeType":"317","messageId":"318","endLine":16,"endColumn":35},{"ruleId":"257","severity":1,"message":"258","line":16,"column":32,"nodeType":"259","messageId":"260","endLine":16,"endColumn":35,"suggestions":"363"},{"ruleId":"312","severity":1,"message":"313","line":23,"column":42,"nodeType":"314","messageId":"315","endLine":23,"endColumn":63},{"ruleId":"257","severity":1,"message":"258","line":24,"column":37,"nodeType":"259","messageId":"260","endLine":24,"endColumn":40,"suggestions":"364"},{"ruleId":"257","severity":1,"message":"258","line":28,"column":19,"nodeType":"259","messageId":"260","endLine":28,"endColumn":22,"suggestions":"365"},{"ruleId":"257","severity":1,"message":"258","line":30,"column":56,"nodeType":"259","messageId":"260","endLine":30,"endColumn":59,"suggestions":"366"},{"ruleId":"257","severity":1,"message":"258","line":33,"column":30,"nodeType":"259","messageId":"260","endLine":33,"endColumn":33,"suggestions":"367"},{"ruleId":"257","severity":1,"message":"258","line":44,"column":37,"nodeType":"259","messageId":"260","endLine":44,"endColumn":40,"suggestions":"368"},{"ruleId":"257","severity":1,"message":"258","line":48,"column":19,"nodeType":"259","messageId":"260","endLine":48,"endColumn":22,"suggestions":"369"},{"ruleId":"257","severity":1,"message":"258","line":50,"column":56,"nodeType":"259","messageId":"260","endLine":50,"endColumn":59,"suggestions":"370"},{"ruleId":"257","severity":1,"message":"258","line":51,"column":30,"nodeType":"259","messageId":"260","endLine":51,"endColumn":33,"suggestions":"371"},{"ruleId":"257","severity":1,"message":"258","line":6,"column":56,"nodeType":"259","messageId":"260","endLine":6,"endColumn":59,"suggestions":"372"},{"ruleId":"257","severity":1,"message":"258","line":11,"column":61,"nodeType":"259","messageId":"260","endLine":11,"endColumn":64,"suggestions":"373"},{"ruleId":"257","severity":1,"message":"258","line":13,"column":61,"nodeType":"259","messageId":"260","endLine":13,"endColumn":64,"suggestions":"374"},{"ruleId":"257","severity":1,"message":"258","line":29,"column":67,"nodeType":"259","messageId":"260","endLine":29,"endColumn":70,"suggestions":"375"},{"ruleId":"257","severity":1,"message":"258","line":29,"column":81,"nodeType":"259","messageId":"260","endLine":29,"endColumn":84,"suggestions":"376"},{"ruleId":"257","severity":1,"message":"258","line":38,"column":52,"nodeType":"259","messageId":"260","endLine":38,"endColumn":55,"suggestions":"377"},{"ruleId":"257","severity":1,"message":"258","line":45,"column":25,"nodeType":"259","messageId":"260","endLine":45,"endColumn":28,"suggestions":"378"},{"ruleId":"257","severity":1,"message":"258","line":52,"column":25,"nodeType":"259","messageId":"260","endLine":52,"endColumn":28,"suggestions":"379"},{"ruleId":"298","severity":1,"message":"299","line":66,"column":5,"nodeType":"300","messageId":"301","endLine":66,"endColumn":16},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["380","381"],["382","383"],"react/jsx-space-before-closing",[],"lines-around-directive",["384"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["385","386"],["387","388"],["389","390"],["391","392"],["393","394"],["395","396"],["397","398"],["399","400"],["401","402"],["403","404"],["405","406"],["407","408"],["409","410"],["411","412"],["413","414"],["415","416"],["417","418"],["419","420"],["421","422"],["423","424"],["425","426"],["427","428"],["429","430"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["431","432"],["433","434"],["435","436"],["437","438"],["439","440"],["441","442"],["443","444"],["445","446"],["447","448"],["449","450"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'state' should be typed with a non-any type.","Identifier","anyTypedArg",["451","452"],["453","454"],"Argument 'newItem' should be typed with a non-any type.",["455","456"],["457","458"],"func-names","Unexpected unnamed function.","FunctionExpression","unnamed",["459","460"],["461","462"],["463","464"],["465","466"],[],["384"],[],[],[],[],"Argument 'val' should be typed with a non-any type.",["467","468"],["469","470"],"Argument 'objCrop' should be typed with a non-any type.",["471","472"],["473","474"],["475","476"],["477","478"],["479","480"],["481","482"],["483","484"],["485","486"],["487","488"],["489","490"],["491","492"],["493","494"],["495","496"],"Argument 'data' should be typed with a non-any type.",["497","498"],"Argument 'saveFunc' should be typed with a non-any type.",["499","500"],["501","502"],"Argument 'el' should be typed with a non-any type.",["503","504"],"Argument 'file' should be typed with a non-any type.",["505","506"],["507","508"],["509","510"],["511","512"],["513","514"],["515","516"],["517","518"],["519","520"],["521","522"],["523","524"],["525","526"],["527","528"],["529","530"],["531","532"],["533","534"],["535","536"],["537","538"],{"messageId":"539","fix":"540","desc":"541"},{"messageId":"542","fix":"543","desc":"544"},{"messageId":"539","fix":"545","desc":"541"},{"messageId":"542","fix":"546","desc":"544"},"padding-line-between-statements",{"messageId":"539","fix":"547","desc":"541"},{"messageId":"542","fix":"548","desc":"544"},{"messageId":"539","fix":"549","desc":"541"},{"messageId":"542","fix":"550","desc":"544"},{"messageId":"539","fix":"551","desc":"541"},{"messageId":"542","fix":"552","desc":"544"},{"messageId":"539","fix":"553","desc":"541"},{"messageId":"542","fix":"554","desc":"544"},{"messageId":"539","fix":"555","desc":"541"},{"messageId":"542","fix":"556","desc":"544"},{"messageId":"539","fix":"557","desc":"541"},{"messageId":"542","fix":"558","desc":"544"},{"messageId":"539","fix":"559","desc":"541"},{"messageId":"542","fix":"560","desc":"544"},{"messageId":"539","fix":"561","desc":"541"},{"messageId":"542","fix":"562","desc":"544"},{"messageId":"539","fix":"563","desc":"541"},{"messageId":"542","fix":"564","desc":"544"},{"messageId":"539","fix":"565","desc":"541"},{"messageId":"542","fix":"566","desc":"544"},{"messageId":"539","fix":"567","desc":"541"},{"messageId":"542","fix":"568","desc":"544"},{"messageId":"539","fix":"569","desc":"541"},{"messageId":"542","fix":"570","desc":"544"},{"messageId":"539","fix":"571","desc":"541"},{"messageId":"542","fix":"572","desc":"544"},{"messageId":"539","fix":"573","desc":"541"},{"messageId":"542","fix":"574","desc":"544"},{"messageId":"539","fix":"575","desc":"541"},{"messageId":"542","fix":"576","desc":"544"},{"messageId":"539","fix":"577","desc":"541"},{"messageId":"542","fix":"578","desc":"544"},{"messageId":"539","fix":"579","desc":"541"},{"messageId":"542","fix":"580","desc":"544"},{"messageId":"539","fix":"581","desc":"541"},{"messageId":"542","fix":"582","desc":"544"},{"messageId":"539","fix":"583","desc":"541"},{"messageId":"542","fix":"584","desc":"544"},{"messageId":"539","fix":"585","desc":"541"},{"messageId":"542","fix":"586","desc":"544"},{"messageId":"539","fix":"587","desc":"541"},{"messageId":"542","fix":"588","desc":"544"},{"messageId":"539","fix":"589","desc":"541"},{"messageId":"542","fix":"590","desc":"544"},{"messageId":"539","fix":"591","desc":"541"},{"messageId":"542","fix":"592","desc":"544"},{"messageId":"539","fix":"593","desc":"541"},{"messageId":"542","fix":"594","desc":"544"},{"messageId":"539","fix":"595","desc":"541"},{"messageId":"542","fix":"596","desc":"544"},{"messageId":"539","fix":"597","desc":"541"},{"messageId":"542","fix":"598","desc":"544"},{"messageId":"539","fix":"599","desc":"541"},{"messageId":"542","fix":"600","desc":"544"},{"messageId":"539","fix":"601","desc":"541"},{"messageId":"542","fix":"602","desc":"544"},{"messageId":"539","fix":"603","desc":"541"},{"messageId":"542","fix":"604","desc":"544"},{"messageId":"539","fix":"605","desc":"541"},{"messageId":"542","fix":"606","desc":"544"},{"messageId":"539","fix":"607","desc":"541"},{"messageId":"542","fix":"608","desc":"544"},{"messageId":"539","fix":"609","desc":"541"},{"messageId":"542","fix":"610","desc":"544"},{"messageId":"539","fix":"611","desc":"541"},{"messageId":"542","fix":"612","desc":"544"},{"messageId":"539","fix":"613","desc":"541"},{"messageId":"542","fix":"614","desc":"544"},{"messageId":"539","fix":"615","desc":"541"},{"messageId":"542","fix":"616","desc":"544"},{"messageId":"539","fix":"617","desc":"541"},{"messageId":"542","fix":"618","desc":"544"},{"messageId":"539","fix":"619","desc":"541"},{"messageId":"542","fix":"620","desc":"544"},{"messageId":"539","fix":"621","desc":"541"},{"messageId":"542","fix":"622","desc":"544"},{"messageId":"539","fix":"623","desc":"541"},{"messageId":"542","fix":"624","desc":"544"},{"messageId":"539","fix":"625","desc":"541"},{"messageId":"542","fix":"626","desc":"544"},{"messageId":"539","fix":"627","desc":"541"},{"messageId":"542","fix":"628","desc":"544"},{"messageId":"539","fix":"629","desc":"541"},{"messageId":"542","fix":"630","desc":"544"},{"messageId":"539","fix":"631","desc":"541"},{"messageId":"542","fix":"632","desc":"544"},{"messageId":"539","fix":"633","desc":"541"},{"messageId":"542","fix":"634","desc":"544"},{"messageId":"539","fix":"635","desc":"541"},{"messageId":"542","fix":"636","desc":"544"},{"messageId":"539","fix":"637","desc":"541"},{"messageId":"542","fix":"638","desc":"544"},{"messageId":"539","fix":"639","desc":"541"},{"messageId":"542","fix":"640","desc":"544"},{"messageId":"539","fix":"641","desc":"541"},{"messageId":"542","fix":"642","desc":"544"},{"messageId":"539","fix":"643","desc":"541"},{"messageId":"542","fix":"644","desc":"544"},{"messageId":"539","fix":"645","desc":"541"},{"messageId":"542","fix":"646","desc":"544"},{"messageId":"539","fix":"647","desc":"541"},{"messageId":"542","fix":"648","desc":"544"},{"messageId":"539","fix":"649","desc":"541"},{"messageId":"542","fix":"650","desc":"544"},{"messageId":"539","fix":"651","desc":"541"},{"messageId":"542","fix":"652","desc":"544"},{"messageId":"539","fix":"653","desc":"541"},{"messageId":"542","fix":"654","desc":"544"},{"messageId":"539","fix":"655","desc":"541"},{"messageId":"542","fix":"656","desc":"544"},{"messageId":"539","fix":"657","desc":"541"},{"messageId":"542","fix":"658","desc":"544"},{"messageId":"539","fix":"659","desc":"541"},{"messageId":"542","fix":"660","desc":"544"},{"messageId":"539","fix":"661","desc":"541"},{"messageId":"542","fix":"662","desc":"544"},{"messageId":"539","fix":"663","desc":"541"},{"messageId":"542","fix":"664","desc":"544"},{"messageId":"539","fix":"665","desc":"541"},{"messageId":"542","fix":"666","desc":"544"},{"messageId":"539","fix":"667","desc":"541"},{"messageId":"542","fix":"668","desc":"544"},{"messageId":"539","fix":"669","desc":"541"},{"messageId":"542","fix":"670","desc":"544"},{"messageId":"539","fix":"671","desc":"541"},{"messageId":"542","fix":"672","desc":"544"},{"messageId":"539","fix":"673","desc":"541"},{"messageId":"542","fix":"674","desc":"544"},{"messageId":"539","fix":"675","desc":"541"},{"messageId":"542","fix":"676","desc":"544"},{"messageId":"539","fix":"677","desc":"541"},{"messageId":"542","fix":"678","desc":"544"},{"messageId":"539","fix":"679","desc":"541"},{"messageId":"542","fix":"680","desc":"544"},{"messageId":"539","fix":"681","desc":"541"},{"messageId":"542","fix":"682","desc":"544"},{"messageId":"539","fix":"683","desc":"541"},{"messageId":"542","fix":"684","desc":"544"},{"messageId":"539","fix":"685","desc":"541"},{"messageId":"542","fix":"686","desc":"544"},{"messageId":"539","fix":"687","desc":"541"},{"messageId":"542","fix":"688","desc":"544"},{"messageId":"539","fix":"689","desc":"541"},{"messageId":"542","fix":"690","desc":"544"},{"messageId":"539","fix":"691","desc":"541"},{"messageId":"542","fix":"692","desc":"544"},{"messageId":"539","fix":"693","desc":"541"},{"messageId":"542","fix":"694","desc":"544"},{"messageId":"539","fix":"695","desc":"541"},{"messageId":"542","fix":"696","desc":"544"},{"messageId":"539","fix":"697","desc":"541"},{"messageId":"542","fix":"698","desc":"544"},{"messageId":"539","fix":"699","desc":"541"},{"messageId":"542","fix":"700","desc":"544"},"suggestUnknown",{"range":"701","text":"702"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"701","text":"703"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"704","text":"702"},{"range":"704","text":"703"},{"range":"705","text":"702"},{"range":"705","text":"703"},{"range":"706","text":"702"},{"range":"706","text":"703"},{"range":"707","text":"702"},{"range":"707","text":"703"},{"range":"708","text":"702"},{"range":"708","text":"703"},{"range":"709","text":"702"},{"range":"709","text":"703"},{"range":"710","text":"702"},{"range":"710","text":"703"},{"range":"711","text":"702"},{"range":"711","text":"703"},{"range":"712","text":"702"},{"range":"712","text":"703"},{"range":"713","text":"702"},{"range":"713","text":"703"},{"range":"714","text":"702"},{"range":"714","text":"703"},{"range":"715","text":"702"},{"range":"715","text":"703"},{"range":"716","text":"702"},{"range":"716","text":"703"},{"range":"717","text":"702"},{"range":"717","text":"703"},{"range":"718","text":"702"},{"range":"718","text":"703"},{"range":"719","text":"702"},{"range":"719","text":"703"},{"range":"720","text":"702"},{"range":"720","text":"703"},{"range":"721","text":"702"},{"range":"721","text":"703"},{"range":"722","text":"702"},{"range":"722","text":"703"},{"range":"723","text":"702"},{"range":"723","text":"703"},{"range":"724","text":"702"},{"range":"724","text":"703"},{"range":"725","text":"702"},{"range":"725","text":"703"},{"range":"726","text":"702"},{"range":"726","text":"703"},{"range":"727","text":"702"},{"range":"727","text":"703"},{"range":"728","text":"702"},{"range":"728","text":"703"},{"range":"729","text":"702"},{"range":"729","text":"703"},{"range":"730","text":"702"},{"range":"730","text":"703"},{"range":"731","text":"702"},{"range":"731","text":"703"},{"range":"732","text":"702"},{"range":"732","text":"703"},{"range":"733","text":"702"},{"range":"733","text":"703"},{"range":"734","text":"702"},{"range":"734","text":"703"},{"range":"735","text":"702"},{"range":"735","text":"703"},{"range":"736","text":"702"},{"range":"736","text":"703"},{"range":"737","text":"702"},{"range":"737","text":"703"},{"range":"738","text":"702"},{"range":"738","text":"703"},{"range":"739","text":"702"},{"range":"739","text":"703"},{"range":"740","text":"702"},{"range":"740","text":"703"},{"range":"741","text":"702"},{"range":"741","text":"703"},{"range":"742","text":"702"},{"range":"742","text":"703"},{"range":"743","text":"702"},{"range":"743","text":"703"},{"range":"744","text":"702"},{"range":"744","text":"703"},{"range":"745","text":"702"},{"range":"745","text":"703"},{"range":"746","text":"702"},{"range":"746","text":"703"},{"range":"747","text":"702"},{"range":"747","text":"703"},{"range":"748","text":"702"},{"range":"748","text":"703"},{"range":"749","text":"702"},{"range":"749","text":"703"},{"range":"750","text":"702"},{"range":"750","text":"703"},{"range":"751","text":"702"},{"range":"751","text":"703"},{"range":"752","text":"702"},{"range":"752","text":"703"},{"range":"753","text":"702"},{"range":"753","text":"703"},{"range":"754","text":"702"},{"range":"754","text":"703"},{"range":"755","text":"702"},{"range":"755","text":"703"},{"range":"756","text":"702"},{"range":"756","text":"703"},{"range":"757","text":"702"},{"range":"757","text":"703"},{"range":"758","text":"702"},{"range":"758","text":"703"},{"range":"759","text":"702"},{"range":"759","text":"703"},{"range":"760","text":"702"},{"range":"760","text":"703"},{"range":"761","text":"702"},{"range":"761","text":"703"},{"range":"762","text":"702"},{"range":"762","text":"703"},{"range":"763","text":"702"},{"range":"763","text":"703"},{"range":"764","text":"702"},{"range":"764","text":"703"},{"range":"765","text":"702"},{"range":"765","text":"703"},{"range":"766","text":"702"},{"range":"766","text":"703"},{"range":"767","text":"702"},{"range":"767","text":"703"},{"range":"768","text":"702"},{"range":"768","text":"703"},{"range":"769","text":"702"},{"range":"769","text":"703"},{"range":"770","text":"702"},{"range":"770","text":"703"},{"range":"771","text":"702"},{"range":"771","text":"703"},{"range":"772","text":"702"},{"range":"772","text":"703"},{"range":"773","text":"702"},{"range":"773","text":"703"},{"range":"774","text":"702"},{"range":"774","text":"703"},{"range":"775","text":"702"},{"range":"775","text":"703"},{"range":"776","text":"702"},{"range":"776","text":"703"},{"range":"777","text":"702"},{"range":"777","text":"703"},{"range":"778","text":"702"},{"range":"778","text":"703"},{"range":"779","text":"702"},{"range":"779","text":"703"},{"range":"780","text":"702"},{"range":"780","text":"703"},{"range":"781","text":"702"},{"range":"781","text":"703"},[168,171],"unknown","never",[195,198],[908,911],[1256,1259],[854,857],[1404,1407],[1450,1453],[1855,1858],[2053,2056],[2363,2366],[2799,2802],[3081,3084],[3539,3542],[3657,3660],[298,301],[615,618],[661,664],[871,874],[920,923],[1031,1034],[1090,1093],[1139,1142],[1186,1189],[1244,1247],[1300,1303],[2238,2241],[3491,3494],[3497,3500],[3978,3981],[4595,4598],[413,416],[429,432],[437,440],[443,446],[506,509],[658,661],[809,812],[839,842],[233,236],[329,332],[341,344],[211,214],[255,258],[898,901],[1057,1060],[1228,1231],[1479,1482],[1954,1957],[3337,3340],[629,632],[129,132],[120,123],[337,340],[601,604],[274,277],[353,356],[393,396],[1091,1094],[181,184],[196,199],[493,496],[86,89],[430,433],[739,742],[826,829],[894,897],[982,985],[1236,1239],[1296,1299],[1364,1367],[1403,1406],[300,303],[442,445],[518,521],[1046,1049],[1060,1063],[1090,1093],[1252,1255],[1433,1436]]